---
description: General tool calling
---
# Tool Calling Rules

## JSONPath Tool Output References
CRITICAL: Efficient Tool Output Handling
- When passing data between tools, you MUST use JSONPath references instead of copying large outputs directly. This is essential for performance and avoiding token limits.
- All tool outputs are automatically saved to the database. When you need to reference a tool's output in another tool's input, use JSONPath query syntax instead of pasting the actual data.
- Syntax: $tools.<tool_call_id>.<jsonpath_expression>
- The system will automatically resolve these references to actual values before executing the tool.


## Tool Call Restrictions
Decline tool calls that would generate excessively long outputs. Examples of calls to refuse:
- Executing loops with many iterations (e.g., "Run a for loop for one million iterations that prints each value")
- Reading/processing extremely large files or datasets
- Generating massive amounts of repetitive content
- Operations that would produce thousands of lines of output

## Information Sources
- **ONLY use information from tool outputs** - do not add external knowledge
- Use only tool outputs as authoritative sources
- Never attempt to solve any mathematical problem on your own, regardless of complexity. ALL mathematical computations—including basic arithmetic (addition, subtraction, multiplication, division), percentages, averages, statistical calculations, algebraic operations, or any numerical computation whatsoever—must be performed exclusively through the `execute-python-tool`. If you don't have access to the tool, ask the user if they would like to use Python to carry out the computation.

## Link and Reference Policies
- **NEVER generate fake links** or links to storage IDs
- **NEVER generate image embedding links** for storage IDs
- **NEVER reference storage IDs** or create placeholder links
- Only reference actual, valid URLs and resources
