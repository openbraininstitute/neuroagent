# generated by fastapi-codegen:
#   filename:  openapi.json
#   timestamp: 2025-05-19T11:49:27+00:00

from __future__ import annotations

from typing import Any, Optional, Union
from uuid import UUID

from fastapi import FastAPI, Header, UploadFile
from pydantic import BaseModel, conint

from .models import (
    Acronym,
    Annotation,
    AnnotationValue,
    AssetPath,
    AssetRead,
    BrainRegionAcronym,
    BrainRegionAcronymIn,
    BrainRegionHierarchyRead,
    BrainRegionId,
    BrainRegionId10,
    BrainRegionIdIn,
    BrainRegionName,
    BrainRegionNameIlike,
    BrainRegionNameIn,
    BrainRegionOrderBy,
    BrainRegionRead,
    ContributionCreate,
    ContributionId,
    ContributionOrderBy,
    ContributionPrefLabel,
    ContributionPrefLabelIn,
    ContributionRead,
    CreationDateGte,
    CreationDateLte,
    ElectricalCellRecordingCreate,
    ElectricalCellRecordingRead,
    EModelCreate,
    EmodelCreationDateGte,
    EmodelCreationDateLte,
    EmodelId,
    EmodelIdIn,
    EmodelName,
    EmodelNameIlike,
    EmodelNameIn,
    EmodelOrderBy,
    EModelRead,
    EModelReadExpanded,
    EmodelScoreGte,
    EmodelScoreLte,
    EmodelSpeciesIdIn,
    EmodelUpdateDateGte,
    EmodelUpdateDateLte,
    EntityId,
    EntityRoute,
    EntityType1,
    ErrorResponse,
    EtypeId,
    EtypeOrderBy,
    EtypePrefLabel,
    EtypePrefLabelIn,
    ExemplarMorphologyCreationDateGte,
    ExemplarMorphologyCreationDateLte,
    ExemplarMorphologyId,
    ExemplarMorphologyIdIn,
    ExemplarMorphologyName,
    ExemplarMorphologyNameIlike,
    ExemplarMorphologyNameIn,
    ExemplarMorphologyOrderBy,
    ExemplarMorphologySpeciesIdIn,
    ExemplarMorphologyUpdateDateGte,
    ExemplarMorphologyUpdateDateLte,
    Expand,
    ExperimentalBoutonDensityCreate,
    ExperimentalBoutonDensityRead,
    ExperimentalNeuronDensityCreate,
    ExperimentalNeuronDensityRead,
    ExperimentalSynapsesPerConnectionCreate,
    ExperimentalSynapsesPerConnectionRead,
    HealthGetResponse,
    HierarchyId,
    Id,
    IdIn,
    IonChannelModelCreate,
    IonChannelModelExpanded,
    IonChannelModelRead,
    IsLjpCorrected,
    IsStochastic,
    IsTemperatureDependent,
    LicenseCreate,
    LicenseRead,
    ListResponseAnnotation,
    ListResponseAssetRead,
    ListResponseBrainRegionHierarchyRead,
    ListResponseContributionRead,
    ListResponseElectricalCellRecordingRead,
    ListResponseEModelRead,
    ListResponseExperimentalBoutonDensityRead,
    ListResponseExperimentalNeuronDensityRead,
    ListResponseExperimentalSynapsesPerConnectionRead,
    ListResponseIonChannelModelRead,
    ListResponseLicenseRead,
    ListResponseMeasurementAnnotationRead,
    ListResponseMEModelRead,
    ListResponseOrganizationRead,
    ListResponsePersonRead,
    ListResponseReconstructionMorphologyRead,
    ListResponseRoleRead,
    ListResponseSingleNeuronSimulationRead,
    ListResponseSingleNeuronSynaptomeRead,
    ListResponseSingleNeuronSynaptomeSimulationRead,
    ListResponseSpeciesRead,
    ListResponseStrainRead,
    ListResponseSubjectRead,
    MeasurementAnnotationCreate,
    MeasurementAnnotationCreationDateGte,
    MeasurementAnnotationCreationDateLte,
    MeasurementAnnotationRead,
    MeasurementAnnotationUpdateDateGte,
    MeasurementAnnotationUpdateDateLte,
    MeasurementItemName,
    MeasurementItemUnit,
    MeasurementItemValueGte,
    MeasurementItemValueLte,
    MeasurementKindDefinition,
    MeasurementKindPrefLabel,
    MeasurementKindStructuralDomain,
    MEModelCreate,
    MEModelRead,
    MeTypeCreationDateGte,
    MeTypeCreationDateLte,
    MeTypeId,
    MeTypeIdIn,
    MeTypeName,
    MeTypeNameIlike,
    MeTypeNameIn,
    MeTypeOrderBy,
    MeTypeSpeciesIdIn,
    MeTypeUpdateDateGte,
    MeTypeUpdateDateLte,
    MeTypeValidationStatus,
    MorphologyCreationDateGte,
    MorphologyCreationDateLte,
    MorphologyId,
    MorphologyIdIn,
    MorphologyName,
    MorphologyNameIlike,
    MorphologyNameIn,
    MorphologyOrderBy,
    MorphologySpeciesIdIn,
    MorphologyUpdateDateGte,
    MorphologyUpdateDateLte,
    MtypeId,
    MtypeOrderBy,
    MtypePrefLabel,
    MtypePrefLabelIn,
    Name,
    NameIlike,
    NameIn,
    NmodlSuffix,
    OrderBy,
    OrganizationCreate,
    OrganizationRead,
    PersonCreate,
    PersonRead,
    PostMtypeId,
    PostMtypeOrderBy,
    PostMtypePrefLabel,
    PostMtypePrefLabelIn,
    PostRegionAcronym,
    PostRegionAcronymIn,
    PostRegionId,
    PostRegionIdIn,
    PostRegionName,
    PostRegionNameIlike,
    PostRegionNameIn,
    PostRegionOrderBy,
    PrefLabel,
    PrefLabelIn,
    PreMtypeId,
    PreMtypeOrderBy,
    PreMtypePrefLabel,
    PreMtypePrefLabelIn,
    PreRegionAcronym,
    PreRegionAcronymIn,
    PreRegionId,
    PreRegionIdIn,
    PreRegionName,
    PreRegionNameIlike,
    PreRegionNameIn,
    PreRegionOrderBy,
    ProjectId,
    ReconstructionMorphologyCreate,
    ReconstructionMorphologyIdGetResponse,
    ReconstructionMorphologyRead,
    RoleCreate,
    RoleRead,
    ScoreGte,
    ScoreLte,
    Search,
    SingleNeuronSimulationCreate,
    SingleNeuronSimulationRead,
    SingleNeuronSynaptomeCreate,
    SingleNeuronSynaptomeRead,
    SingleNeuronSynaptomeSimulationCreate,
    SingleNeuronSynaptomeSimulationRead,
    SpeciesCreate,
    SpeciesId,
    SpeciesIdIn,
    SpeciesIdIn7,
    SpeciesName,
    SpeciesNameIlike,
    SpeciesNameIn,
    SpeciesOrderBy,
    SpeciesRead,
    Status,
    StrainCreate,
    StrainId,
    StrainName,
    StrainNameIlike,
    StrainNameIn,
    StrainOrderBy,
    StrainRead,
    SubjectCreate,
    SubjectId,
    SubjectName,
    SubjectNameIlike,
    SubjectNameIn,
    SubjectOrderBy,
    SubjectRead,
    SubjectSpeciesIdIn,
    SynapticPathwayOrderBy,
    SynaptomeCreationDateGte,
    SynaptomeCreationDateLte,
    SynaptomeId,
    SynaptomeIdIn,
    SynaptomeName,
    SynaptomeNameIlike,
    SynaptomeNameIn,
    SynaptomeOrderBy,
    SynaptomeUpdateDateGte,
    SynaptomeUpdateDateLte,
    TemperatureCelsiusGte,
    TemperatureCelsiusLte,
    UpdateDateGte,
    UpdateDateLte,
    ValidationStatus1,
    VersionGetResponse,
    VirtualLabId,
    WithinBrainRegionBrainRegionId,
    WithinBrainRegionHierachyId,
)


class RootGetParams(BaseModel):
    """Root."""


class ReadManyBrainRegionGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    acronym: Optional[Acronym] = None
    annotation_value: Optional[AnnotationValue] = None
    hierarchy_id: Optional[HierarchyId] = None
    order_by: Optional[OrderBy] = 'name'
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyBrainRegionHierarchyGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    id__in: Optional[IdIn] = None
    order_by: Optional[OrderBy] = 'name'
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadOneBrainRegionHierarchyIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadHierarchyBrainRegionHierarchyIdHierarchyGetParams(BaseModel):
    """Read Hierarchy."""

    id_: str
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadOneBrainRegionIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class GetCellCompositionGetParams(BaseModel):
    """Get."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyContributionGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneContributionPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: ContributionCreate = ...


class ReadOneContributionIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyElectricalCellRecordingGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    creation_date__lte: Optional[CreationDateLte] = None
    creation_date__gte: Optional[CreationDateGte] = None
    update_date__lte: Optional[UpdateDateLte] = None
    update_date__gte: Optional[UpdateDateGte] = None
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    id__in: Optional[IdIn] = None
    order_by: Optional[OrderBy] = '-creation_date'
    contribution__id: Optional[ContributionId] = None
    contribution__pref_label: Optional[ContributionPrefLabel] = None
    contribution__pref_label__in: Optional[ContributionPrefLabelIn] = None
    contribution__order_by: Optional[ContributionOrderBy] = 'pref_label'
    subject__name: Optional[SubjectName] = None
    subject__name__in: Optional[SubjectNameIn] = None
    subject__name__ilike: Optional[SubjectNameIlike] = None
    subject__species_id_in: Optional[SubjectSpeciesIdIn] = None
    subject__id: Optional[SubjectId] = None
    subject__order_by: Optional[SubjectOrderBy] = '-creation_date'
    species__name: Optional[SpeciesName] = None
    species__name__in: Optional[SpeciesNameIn] = None
    species__name__ilike: Optional[SpeciesNameIlike] = None
    species__id: Optional[SpeciesId] = None
    species__order_by: Optional[SpeciesOrderBy] = 'name'
    strain__name: Optional[StrainName] = None
    strain__name__in: Optional[StrainNameIn] = None
    strain__name__ilike: Optional[StrainNameIlike] = None
    strain__id: Optional[StrainId] = None
    strain__order_by: Optional[StrainOrderBy] = 'name'
    brain_region__name: Optional[BrainRegionName] = None
    brain_region__name__in: Optional[BrainRegionNameIn] = None
    brain_region__name__ilike: Optional[BrainRegionNameIlike] = None
    brain_region__id: Optional[BrainRegionId] = None
    brain_region__id__in: Optional[BrainRegionIdIn] = None
    brain_region__acronym: Optional[BrainRegionAcronym] = None
    brain_region__acronym__in: Optional[BrainRegionAcronymIn] = None
    brain_region__order_by: Optional[BrainRegionOrderBy] = 'name'
    search: Optional[Search] = None
    with_facets: Optional[bool] = False
    within_brain_region_hierachy_id: Optional[WithinBrainRegionHierachyId] = None
    within_brain_region_brain_region_id: Optional[WithinBrainRegionBrainRegionId] = None
    within_brain_region_ascendants: Optional[bool] = False
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneElectricalCellRecordingPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: ElectricalCellRecordingCreate = ...


class ReadOneElectricalCellRecordingIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyEmodelGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    species_id_in: Optional[SpeciesIdIn] = None
    creation_date__lte: Optional[CreationDateLte] = None
    creation_date__gte: Optional[CreationDateGte] = None
    update_date__lte: Optional[UpdateDateLte] = None
    update_date__gte: Optional[UpdateDateGte] = None
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    id__in: Optional[IdIn] = None
    score__lte: Optional[ScoreLte] = None
    score__gte: Optional[ScoreGte] = None
    order_by: Optional[OrderBy] = '-creation_date'
    species__name: Optional[SpeciesName] = None
    species__name__in: Optional[SpeciesNameIn] = None
    species__name__ilike: Optional[SpeciesNameIlike] = None
    species__id: Optional[SpeciesId] = None
    species__order_by: Optional[SpeciesOrderBy] = 'name'
    strain__name: Optional[StrainName] = None
    strain__name__in: Optional[StrainNameIn] = None
    strain__name__ilike: Optional[StrainNameIlike] = None
    strain__id: Optional[StrainId] = None
    strain__order_by: Optional[StrainOrderBy] = 'name'
    etype__id: Optional[EtypeId] = None
    etype__pref_label: Optional[EtypePrefLabel] = None
    etype__pref_label__in: Optional[EtypePrefLabelIn] = None
    etype__order_by: Optional[EtypeOrderBy] = 'pref_label'
    mtype__id: Optional[MtypeId] = None
    mtype__pref_label: Optional[MtypePrefLabel] = None
    mtype__pref_label__in: Optional[MtypePrefLabelIn] = None
    mtype__order_by: Optional[MtypeOrderBy] = 'pref_label'
    contribution__id: Optional[ContributionId] = None
    contribution__pref_label: Optional[ContributionPrefLabel] = None
    contribution__pref_label__in: Optional[ContributionPrefLabelIn] = None
    contribution__order_by: Optional[ContributionOrderBy] = 'pref_label'
    exemplar_morphology__creation_date__lte: Optional[
        ExemplarMorphologyCreationDateLte
    ] = None
    exemplar_morphology__creation_date__gte: Optional[
        ExemplarMorphologyCreationDateGte
    ] = None
    exemplar_morphology__update_date__lte: Optional[ExemplarMorphologyUpdateDateLte] = (
        None
    )
    exemplar_morphology__update_date__gte: Optional[ExemplarMorphologyUpdateDateGte] = (
        None
    )
    exemplar_morphology__name: Optional[ExemplarMorphologyName] = None
    exemplar_morphology__name__in: Optional[ExemplarMorphologyNameIn] = None
    exemplar_morphology__name__ilike: Optional[ExemplarMorphologyNameIlike] = None
    exemplar_morphology__id: Optional[ExemplarMorphologyId] = None
    exemplar_morphology__id__in: Optional[ExemplarMorphologyIdIn] = None
    exemplar_morphology__species_id_in: Optional[ExemplarMorphologySpeciesIdIn] = None
    exemplar_morphology__order_by: Optional[ExemplarMorphologyOrderBy] = (
        '-creation_date'
    )
    measurement_annotation__creation_date__lte: Optional[
        MeasurementAnnotationCreationDateLte
    ] = None
    measurement_annotation__creation_date__gte: Optional[
        MeasurementAnnotationCreationDateGte
    ] = None
    measurement_annotation__update_date__lte: Optional[
        MeasurementAnnotationUpdateDateLte
    ] = None
    measurement_annotation__update_date__gte: Optional[
        MeasurementAnnotationUpdateDateGte
    ] = None
    measurement_kind__pref_label: Optional[MeasurementKindPrefLabel] = None
    measurement_kind__definition: Optional[MeasurementKindDefinition] = None
    measurement_kind__structural_domain: Optional[MeasurementKindStructuralDomain] = (
        None
    )
    measurement_item__name: Optional[MeasurementItemName] = None
    measurement_item__unit: Optional[MeasurementItemUnit] = None
    measurement_item__value__gte: Optional[MeasurementItemValueGte] = None
    measurement_item__value__lte: Optional[MeasurementItemValueLte] = None
    brain_region__name: Optional[BrainRegionName] = None
    brain_region__name__in: Optional[BrainRegionNameIn] = None
    brain_region__name__ilike: Optional[BrainRegionNameIlike] = None
    brain_region__id: Optional[BrainRegionId] = None
    brain_region__id__in: Optional[BrainRegionIdIn] = None
    brain_region__acronym: Optional[BrainRegionAcronym] = None
    brain_region__acronym__in: Optional[BrainRegionAcronymIn] = None
    brain_region__order_by: Optional[BrainRegionOrderBy] = 'name'
    search: Optional[Search] = None
    with_facets: Optional[bool] = False
    within_brain_region_hierachy_id: Optional[WithinBrainRegionHierachyId] = None
    within_brain_region_brain_region_id: Optional[WithinBrainRegionBrainRegionId] = None
    within_brain_region_ascendants: Optional[bool] = False
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneEmodelPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: EModelCreate = ...


class ReadOneEmodelIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyExperimentalBoutonDensityGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    species_id_in: Optional[SpeciesIdIn] = None
    creation_date__lte: Optional[CreationDateLte] = None
    creation_date__gte: Optional[CreationDateGte] = None
    update_date__lte: Optional[UpdateDateLte] = None
    update_date__gte: Optional[UpdateDateGte] = None
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    id__in: Optional[IdIn] = None
    order_by: Optional[OrderBy] = '-creation_date'
    mtype__id: Optional[MtypeId] = None
    mtype__pref_label: Optional[MtypePrefLabel] = None
    mtype__pref_label__in: Optional[MtypePrefLabelIn] = None
    mtype__order_by: Optional[MtypeOrderBy] = 'pref_label'
    brain_region__name: Optional[BrainRegionName] = None
    brain_region__name__in: Optional[BrainRegionNameIn] = None
    brain_region__name__ilike: Optional[BrainRegionNameIlike] = None
    brain_region__id: Optional[BrainRegionId] = None
    brain_region__id__in: Optional[BrainRegionIdIn] = None
    brain_region__acronym: Optional[BrainRegionAcronym] = None
    brain_region__acronym__in: Optional[BrainRegionAcronymIn] = None
    brain_region__order_by: Optional[BrainRegionOrderBy] = 'name'
    species__name: Optional[SpeciesName] = None
    species__name__in: Optional[SpeciesNameIn] = None
    species__name__ilike: Optional[SpeciesNameIlike] = None
    species__id: Optional[SpeciesId] = None
    species__order_by: Optional[SpeciesOrderBy] = 'name'
    strain__name: Optional[StrainName] = None
    strain__name__in: Optional[StrainNameIn] = None
    strain__name__ilike: Optional[StrainNameIlike] = None
    strain__id: Optional[StrainId] = None
    strain__order_by: Optional[StrainOrderBy] = 'name'
    contribution__id: Optional[ContributionId] = None
    contribution__pref_label: Optional[ContributionPrefLabel] = None
    contribution__pref_label__in: Optional[ContributionPrefLabelIn] = None
    contribution__order_by: Optional[ContributionOrderBy] = 'pref_label'
    search: Optional[Search] = None
    with_facets: Optional[bool] = False
    within_brain_region_hierachy_id: Optional[WithinBrainRegionHierachyId] = None
    within_brain_region_brain_region_id: Optional[WithinBrainRegionBrainRegionId] = None
    within_brain_region_ascendants: Optional[bool] = False
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneExperimentalBoutonDensityPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: ExperimentalBoutonDensityCreate = ...


class ReadOneExperimentalBoutonDensityIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyExperimentalNeuronDensityGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    species_id_in: Optional[SpeciesIdIn] = None
    creation_date__lte: Optional[CreationDateLte] = None
    creation_date__gte: Optional[CreationDateGte] = None
    update_date__lte: Optional[UpdateDateLte] = None
    update_date__gte: Optional[UpdateDateGte] = None
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    id__in: Optional[IdIn] = None
    order_by: Optional[OrderBy] = '-creation_date'
    etype__id: Optional[EtypeId] = None
    etype__pref_label: Optional[EtypePrefLabel] = None
    etype__pref_label__in: Optional[EtypePrefLabelIn] = None
    etype__order_by: Optional[EtypeOrderBy] = 'pref_label'
    mtype__id: Optional[MtypeId] = None
    mtype__pref_label: Optional[MtypePrefLabel] = None
    mtype__pref_label__in: Optional[MtypePrefLabelIn] = None
    mtype__order_by: Optional[MtypeOrderBy] = 'pref_label'
    brain_region__name: Optional[BrainRegionName] = None
    brain_region__name__in: Optional[BrainRegionNameIn] = None
    brain_region__name__ilike: Optional[BrainRegionNameIlike] = None
    brain_region__id: Optional[BrainRegionId] = None
    brain_region__id__in: Optional[BrainRegionIdIn] = None
    brain_region__acronym: Optional[BrainRegionAcronym] = None
    brain_region__acronym__in: Optional[BrainRegionAcronymIn] = None
    brain_region__order_by: Optional[BrainRegionOrderBy] = 'name'
    species__name: Optional[SpeciesName] = None
    species__name__in: Optional[SpeciesNameIn] = None
    species__name__ilike: Optional[SpeciesNameIlike] = None
    species__id: Optional[SpeciesId] = None
    species__order_by: Optional[SpeciesOrderBy] = 'name'
    strain__name: Optional[StrainName] = None
    strain__name__in: Optional[StrainNameIn] = None
    strain__name__ilike: Optional[StrainNameIlike] = None
    strain__id: Optional[StrainId] = None
    strain__order_by: Optional[StrainOrderBy] = 'name'
    contribution__id: Optional[ContributionId] = None
    contribution__pref_label: Optional[ContributionPrefLabel] = None
    contribution__pref_label__in: Optional[ContributionPrefLabelIn] = None
    contribution__order_by: Optional[ContributionOrderBy] = 'pref_label'
    search: Optional[Search] = None
    with_facets: Optional[bool] = False
    within_brain_region_hierachy_id: Optional[WithinBrainRegionHierachyId] = None
    within_brain_region_brain_region_id: Optional[WithinBrainRegionBrainRegionId] = None
    within_brain_region_ascendants: Optional[bool] = False
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneExperimentalNeuronDensityPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: ExperimentalNeuronDensityCreate = ...


class ReadOneExperimentalNeuronDensityIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyExperimentalSynapsesPerConnectionGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    species_id_in: Optional[SpeciesIdIn] = None
    creation_date__lte: Optional[CreationDateLte] = None
    creation_date__gte: Optional[CreationDateGte] = None
    update_date__lte: Optional[UpdateDateLte] = None
    update_date__gte: Optional[UpdateDateGte] = None
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    id__in: Optional[IdIn] = None
    order_by: Optional[OrderBy] = '-creation_date'
    synaptic_pathway__order_by: Optional[SynapticPathwayOrderBy] = '-creation_date'
    pre_mtype__id: Optional[PreMtypeId] = None
    pre_mtype__pref_label: Optional[PreMtypePrefLabel] = None
    pre_mtype__pref_label__in: Optional[PreMtypePrefLabelIn] = None
    pre_mtype__order_by: Optional[PreMtypeOrderBy] = 'pref_label'
    post_mtype__id: Optional[PostMtypeId] = None
    post_mtype__pref_label: Optional[PostMtypePrefLabel] = None
    post_mtype__pref_label__in: Optional[PostMtypePrefLabelIn] = None
    post_mtype__order_by: Optional[PostMtypeOrderBy] = 'pref_label'
    pre_region__name: Optional[PreRegionName] = None
    pre_region__name__in: Optional[PreRegionNameIn] = None
    pre_region__name__ilike: Optional[PreRegionNameIlike] = None
    pre_region__id: Optional[PreRegionId] = None
    pre_region__id__in: Optional[PreRegionIdIn] = None
    pre_region__acronym: Optional[PreRegionAcronym] = None
    pre_region__acronym__in: Optional[PreRegionAcronymIn] = None
    pre_region__order_by: Optional[PreRegionOrderBy] = 'name'
    post_region__name: Optional[PostRegionName] = None
    post_region__name__in: Optional[PostRegionNameIn] = None
    post_region__name__ilike: Optional[PostRegionNameIlike] = None
    post_region__id: Optional[PostRegionId] = None
    post_region__id__in: Optional[PostRegionIdIn] = None
    post_region__acronym: Optional[PostRegionAcronym] = None
    post_region__acronym__in: Optional[PostRegionAcronymIn] = None
    post_region__order_by: Optional[PostRegionOrderBy] = 'name'
    brain_region__name: Optional[BrainRegionName] = None
    brain_region__name__in: Optional[BrainRegionNameIn] = None
    brain_region__name__ilike: Optional[BrainRegionNameIlike] = None
    brain_region__id: Optional[BrainRegionId] = None
    brain_region__id__in: Optional[BrainRegionIdIn] = None
    brain_region__acronym: Optional[BrainRegionAcronym] = None
    brain_region__acronym__in: Optional[BrainRegionAcronymIn] = None
    brain_region__order_by: Optional[BrainRegionOrderBy] = 'name'
    species__name: Optional[SpeciesName] = None
    species__name__in: Optional[SpeciesNameIn] = None
    species__name__ilike: Optional[SpeciesNameIlike] = None
    species__id: Optional[SpeciesId] = None
    species__order_by: Optional[SpeciesOrderBy] = 'name'
    strain__name: Optional[StrainName] = None
    strain__name__in: Optional[StrainNameIn] = None
    strain__name__ilike: Optional[StrainNameIlike] = None
    strain__id: Optional[StrainId] = None
    strain__order_by: Optional[StrainOrderBy] = 'name'
    contribution__id: Optional[ContributionId] = None
    contribution__pref_label: Optional[ContributionPrefLabel] = None
    contribution__pref_label__in: Optional[ContributionPrefLabelIn] = None
    contribution__order_by: Optional[ContributionOrderBy] = 'pref_label'
    search: Optional[Search] = None
    with_facets: Optional[bool] = False
    within_brain_region_hierachy_id: Optional[WithinBrainRegionHierachyId] = None
    within_brain_region_brain_region_id: Optional[WithinBrainRegionBrainRegionId] = None
    within_brain_region_ascendants: Optional[bool] = False
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneExperimentalSynapsesPerConnectionPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: ExperimentalSynapsesPerConnectionCreate = ...


class ReadOneExperimentalSynapsesPerConnectionIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class HealthHealthGetParams(BaseModel):
    """Health."""


class ReadManyIonChannelModelGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    search: Optional[Search] = None
    creation_date__lte: Optional[CreationDateLte] = None
    creation_date__gte: Optional[CreationDateGte] = None
    update_date__lte: Optional[UpdateDateLte] = None
    update_date__gte: Optional[UpdateDateGte] = None
    name__ilike: Optional[NameIlike] = None
    nmodl_suffix: Optional[NmodlSuffix] = None
    brain_region_id: Optional[BrainRegionId10] = None
    species_id__in: Optional[SpeciesIdIn7] = None
    is_ljp_corrected: Optional[IsLjpCorrected] = None
    is_temperature_dependent: Optional[IsTemperatureDependent] = None
    temperature_celsius__lte: Optional[TemperatureCelsiusLte] = None
    temperature_celsius__gte: Optional[TemperatureCelsiusGte] = None
    is_stochastic: Optional[IsStochastic] = None
    order_by: Optional[OrderBy] = '-creation_date'
    species__name: Optional[SpeciesName] = None
    species__name__in: Optional[SpeciesNameIn] = None
    species__name__ilike: Optional[SpeciesNameIlike] = None
    species__id: Optional[SpeciesId] = None
    species__order_by: Optional[SpeciesOrderBy] = 'name'
    within_brain_region_hierachy_id: Optional[WithinBrainRegionHierachyId] = None
    within_brain_region_brain_region_id: Optional[WithinBrainRegionBrainRegionId] = None
    within_brain_region_ascendants: Optional[bool] = False
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneIonChannelModelPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: IonChannelModelCreate = ...


class ReadOneIonChannelModelIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyLicenseGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneLicensePostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: LicenseCreate = ...


class ReadOneLicenseIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyMeasurementAnnotationGetParams(BaseModel):
    """Read Many."""

    creation_date__lte: Optional[CreationDateLte] = None
    creation_date__gte: Optional[CreationDateGte] = None
    update_date__lte: Optional[UpdateDateLte] = None
    update_date__gte: Optional[UpdateDateGte] = None
    id__in: Optional[IdIn] = None
    entity_id: Optional[EntityId] = None
    entity_type: Optional[EntityType1] = None
    order_by: Optional[OrderBy] = '-creation_date'
    measurement_kind__pref_label: Optional[MeasurementKindPrefLabel] = None
    measurement_kind__definition: Optional[MeasurementKindDefinition] = None
    measurement_kind__structural_domain: Optional[MeasurementKindStructuralDomain] = (
        None
    )
    measurement_item__name: Optional[MeasurementItemName] = None
    measurement_item__unit: Optional[MeasurementItemUnit] = None
    measurement_item__value__gte: Optional[MeasurementItemValueGte] = None
    measurement_item__value__lte: Optional[MeasurementItemValueLte] = None
    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    within_brain_region_hierachy_id: Optional[WithinBrainRegionHierachyId] = None
    within_brain_region_brain_region_id: Optional[WithinBrainRegionBrainRegionId] = None
    within_brain_region_ascendants: Optional[bool] = False
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneMeasurementAnnotationPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: MeasurementAnnotationCreate = ...


class ReadOneMeasurementAnnotationIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class DeleteOneMeasurementAnnotationIdDeleteParams(BaseModel):
    """Delete One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyMemodelGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    creation_date__lte: Optional[CreationDateLte] = None
    creation_date__gte: Optional[CreationDateGte] = None
    update_date__lte: Optional[UpdateDateLte] = None
    update_date__gte: Optional[UpdateDateGte] = None
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    id__in: Optional[IdIn] = None
    species_id_in: Optional[SpeciesIdIn] = None
    validation_status: Optional[ValidationStatus1] = None
    order_by: Optional[OrderBy] = '-creation_date'
    etype__id: Optional[EtypeId] = None
    etype__pref_label: Optional[EtypePrefLabel] = None
    etype__pref_label__in: Optional[EtypePrefLabelIn] = None
    etype__order_by: Optional[EtypeOrderBy] = 'pref_label'
    mtype__id: Optional[MtypeId] = None
    mtype__pref_label: Optional[MtypePrefLabel] = None
    mtype__pref_label__in: Optional[MtypePrefLabelIn] = None
    mtype__order_by: Optional[MtypeOrderBy] = 'pref_label'
    contribution__id: Optional[ContributionId] = None
    contribution__pref_label: Optional[ContributionPrefLabel] = None
    contribution__pref_label__in: Optional[ContributionPrefLabelIn] = None
    contribution__order_by: Optional[ContributionOrderBy] = 'pref_label'
    species__name: Optional[SpeciesName] = None
    species__name__in: Optional[SpeciesNameIn] = None
    species__name__ilike: Optional[SpeciesNameIlike] = None
    species__id: Optional[SpeciesId] = None
    species__order_by: Optional[SpeciesOrderBy] = 'name'
    strain__name: Optional[StrainName] = None
    strain__name__in: Optional[StrainNameIn] = None
    strain__name__ilike: Optional[StrainNameIlike] = None
    strain__id: Optional[StrainId] = None
    strain__order_by: Optional[StrainOrderBy] = 'name'
    morphology__creation_date__lte: Optional[MorphologyCreationDateLte] = None
    morphology__creation_date__gte: Optional[MorphologyCreationDateGte] = None
    morphology__update_date__lte: Optional[MorphologyUpdateDateLte] = None
    morphology__update_date__gte: Optional[MorphologyUpdateDateGte] = None
    morphology__name: Optional[MorphologyName] = None
    morphology__name__in: Optional[MorphologyNameIn] = None
    morphology__name__ilike: Optional[MorphologyNameIlike] = None
    morphology__id: Optional[MorphologyId] = None
    morphology__id__in: Optional[MorphologyIdIn] = None
    morphology__species_id_in: Optional[MorphologySpeciesIdIn] = None
    morphology__order_by: Optional[MorphologyOrderBy] = '-creation_date'
    measurement_annotation__creation_date__lte: Optional[
        MeasurementAnnotationCreationDateLte
    ] = None
    measurement_annotation__creation_date__gte: Optional[
        MeasurementAnnotationCreationDateGte
    ] = None
    measurement_annotation__update_date__lte: Optional[
        MeasurementAnnotationUpdateDateLte
    ] = None
    measurement_annotation__update_date__gte: Optional[
        MeasurementAnnotationUpdateDateGte
    ] = None
    measurement_kind__pref_label: Optional[MeasurementKindPrefLabel] = None
    measurement_kind__definition: Optional[MeasurementKindDefinition] = None
    measurement_kind__structural_domain: Optional[MeasurementKindStructuralDomain] = (
        None
    )
    measurement_item__name: Optional[MeasurementItemName] = None
    measurement_item__unit: Optional[MeasurementItemUnit] = None
    measurement_item__value__gte: Optional[MeasurementItemValueGte] = None
    measurement_item__value__lte: Optional[MeasurementItemValueLte] = None
    brain_region__name: Optional[BrainRegionName] = None
    brain_region__name__in: Optional[BrainRegionNameIn] = None
    brain_region__name__ilike: Optional[BrainRegionNameIlike] = None
    brain_region__id: Optional[BrainRegionId] = None
    brain_region__id__in: Optional[BrainRegionIdIn] = None
    brain_region__acronym: Optional[BrainRegionAcronym] = None
    brain_region__acronym__in: Optional[BrainRegionAcronymIn] = None
    brain_region__order_by: Optional[BrainRegionOrderBy] = 'name'
    emodel__species_id_in: Optional[EmodelSpeciesIdIn] = None
    emodel__creation_date__lte: Optional[EmodelCreationDateLte] = None
    emodel__creation_date__gte: Optional[EmodelCreationDateGte] = None
    emodel__update_date__lte: Optional[EmodelUpdateDateLte] = None
    emodel__update_date__gte: Optional[EmodelUpdateDateGte] = None
    emodel__name: Optional[EmodelName] = None
    emodel__name__in: Optional[EmodelNameIn] = None
    emodel__name__ilike: Optional[EmodelNameIlike] = None
    emodel__id: Optional[EmodelId] = None
    emodel__id__in: Optional[EmodelIdIn] = None
    emodel__score__lte: Optional[EmodelScoreLte] = None
    emodel__score__gte: Optional[EmodelScoreGte] = None
    emodel__order_by: Optional[EmodelOrderBy] = '-creation_date'
    exemplar_morphology__creation_date__lte: Optional[
        ExemplarMorphologyCreationDateLte
    ] = None
    exemplar_morphology__creation_date__gte: Optional[
        ExemplarMorphologyCreationDateGte
    ] = None
    exemplar_morphology__update_date__lte: Optional[ExemplarMorphologyUpdateDateLte] = (
        None
    )
    exemplar_morphology__update_date__gte: Optional[ExemplarMorphologyUpdateDateGte] = (
        None
    )
    exemplar_morphology__name: Optional[ExemplarMorphologyName] = None
    exemplar_morphology__name__in: Optional[ExemplarMorphologyNameIn] = None
    exemplar_morphology__name__ilike: Optional[ExemplarMorphologyNameIlike] = None
    exemplar_morphology__id: Optional[ExemplarMorphologyId] = None
    exemplar_morphology__id__in: Optional[ExemplarMorphologyIdIn] = None
    exemplar_morphology__species_id_in: Optional[ExemplarMorphologySpeciesIdIn] = None
    exemplar_morphology__order_by: Optional[ExemplarMorphologyOrderBy] = (
        '-creation_date'
    )
    search: Optional[Search] = None
    with_facets: Optional[bool] = False
    within_brain_region_hierachy_id: Optional[WithinBrainRegionHierachyId] = None
    within_brain_region_brain_region_id: Optional[WithinBrainRegionBrainRegionId] = None
    within_brain_region_ascendants: Optional[bool] = False
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneMemodelPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: MEModelCreate = ...


class ReadOneMemodelIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyMtypeGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    id: Optional[Id] = None
    pref_label: Optional[PrefLabel] = None
    pref_label__in: Optional[PrefLabelIn] = None
    order_by: Optional[OrderBy] = 'pref_label'
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadOneMtypeIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyOrganizationGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneOrganizationPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: OrganizationCreate = ...


class ReadOneOrganizationIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyPersonGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOnePersonPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: PersonCreate = ...


class ReadOnePersonIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyReconstructionMorphologyGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    creation_date__lte: Optional[CreationDateLte] = None
    creation_date__gte: Optional[CreationDateGte] = None
    update_date__lte: Optional[UpdateDateLte] = None
    update_date__gte: Optional[UpdateDateGte] = None
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    id__in: Optional[IdIn] = None
    species_id_in: Optional[SpeciesIdIn] = None
    order_by: Optional[OrderBy] = '-creation_date'
    contribution__id: Optional[ContributionId] = None
    contribution__pref_label: Optional[ContributionPrefLabel] = None
    contribution__pref_label__in: Optional[ContributionPrefLabelIn] = None
    contribution__order_by: Optional[ContributionOrderBy] = 'pref_label'
    measurement_annotation__creation_date__lte: Optional[
        MeasurementAnnotationCreationDateLte
    ] = None
    measurement_annotation__creation_date__gte: Optional[
        MeasurementAnnotationCreationDateGte
    ] = None
    measurement_annotation__update_date__lte: Optional[
        MeasurementAnnotationUpdateDateLte
    ] = None
    measurement_annotation__update_date__gte: Optional[
        MeasurementAnnotationUpdateDateGte
    ] = None
    measurement_kind__pref_label: Optional[MeasurementKindPrefLabel] = None
    measurement_kind__definition: Optional[MeasurementKindDefinition] = None
    measurement_kind__structural_domain: Optional[MeasurementKindStructuralDomain] = (
        None
    )
    measurement_item__name: Optional[MeasurementItemName] = None
    measurement_item__unit: Optional[MeasurementItemUnit] = None
    measurement_item__value__gte: Optional[MeasurementItemValueGte] = None
    measurement_item__value__lte: Optional[MeasurementItemValueLte] = None
    mtype__id: Optional[MtypeId] = None
    mtype__pref_label: Optional[MtypePrefLabel] = None
    mtype__pref_label__in: Optional[MtypePrefLabelIn] = None
    mtype__order_by: Optional[MtypeOrderBy] = 'pref_label'
    species__name: Optional[SpeciesName] = None
    species__name__in: Optional[SpeciesNameIn] = None
    species__name__ilike: Optional[SpeciesNameIlike] = None
    species__id: Optional[SpeciesId] = None
    species__order_by: Optional[SpeciesOrderBy] = 'name'
    strain__name: Optional[StrainName] = None
    strain__name__in: Optional[StrainNameIn] = None
    strain__name__ilike: Optional[StrainNameIlike] = None
    strain__id: Optional[StrainId] = None
    strain__order_by: Optional[StrainOrderBy] = 'name'
    brain_region__name: Optional[BrainRegionName] = None
    brain_region__name__in: Optional[BrainRegionNameIn] = None
    brain_region__name__ilike: Optional[BrainRegionNameIlike] = None
    brain_region__id: Optional[BrainRegionId] = None
    brain_region__id__in: Optional[BrainRegionIdIn] = None
    brain_region__acronym: Optional[BrainRegionAcronym] = None
    brain_region__acronym__in: Optional[BrainRegionAcronymIn] = None
    brain_region__order_by: Optional[BrainRegionOrderBy] = 'name'
    search: Optional[Search] = None
    with_facets: Optional[bool] = False
    within_brain_region_hierachy_id: Optional[WithinBrainRegionHierachyId] = None
    within_brain_region_brain_region_id: Optional[WithinBrainRegionBrainRegionId] = None
    within_brain_region_ascendants: Optional[bool] = False
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneReconstructionMorphologyPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: ReconstructionMorphologyCreate = ...


class ReadOneReconstructionMorphologyIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    expand: Optional[Expand] = None
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyRoleGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneRolePostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: RoleCreate = ...


class ReadOneRoleIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManySingleNeuronSimulationGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    creation_date__lte: Optional[CreationDateLte] = None
    creation_date__gte: Optional[CreationDateGte] = None
    update_date__lte: Optional[UpdateDateLte] = None
    update_date__gte: Optional[UpdateDateGte] = None
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    id__in: Optional[IdIn] = None
    status: Optional[Status] = None
    order_by: Optional[OrderBy] = '-creation_date'
    brain_region__name: Optional[BrainRegionName] = None
    brain_region__name__in: Optional[BrainRegionNameIn] = None
    brain_region__name__ilike: Optional[BrainRegionNameIlike] = None
    brain_region__id: Optional[BrainRegionId] = None
    brain_region__id__in: Optional[BrainRegionIdIn] = None
    brain_region__acronym: Optional[BrainRegionAcronym] = None
    brain_region__acronym__in: Optional[BrainRegionAcronymIn] = None
    brain_region__order_by: Optional[BrainRegionOrderBy] = 'name'
    contribution__id: Optional[ContributionId] = None
    contribution__pref_label: Optional[ContributionPrefLabel] = None
    contribution__pref_label__in: Optional[ContributionPrefLabelIn] = None
    contribution__order_by: Optional[ContributionOrderBy] = 'pref_label'
    me_type__creation_date__lte: Optional[MeTypeCreationDateLte] = None
    me_type__creation_date__gte: Optional[MeTypeCreationDateGte] = None
    me_type__update_date__lte: Optional[MeTypeUpdateDateLte] = None
    me_type__update_date__gte: Optional[MeTypeUpdateDateGte] = None
    me_type__name: Optional[MeTypeName] = None
    me_type__name__in: Optional[MeTypeNameIn] = None
    me_type__name__ilike: Optional[MeTypeNameIlike] = None
    me_type__id: Optional[MeTypeId] = None
    me_type__id__in: Optional[MeTypeIdIn] = None
    me_type__species_id_in: Optional[MeTypeSpeciesIdIn] = None
    me_type__validation_status: Optional[MeTypeValidationStatus] = None
    me_type__order_by: Optional[MeTypeOrderBy] = '-creation_date'
    etype__id: Optional[EtypeId] = None
    etype__pref_label: Optional[EtypePrefLabel] = None
    etype__pref_label__in: Optional[EtypePrefLabelIn] = None
    etype__order_by: Optional[EtypeOrderBy] = 'pref_label'
    mtype__id: Optional[MtypeId] = None
    mtype__pref_label: Optional[MtypePrefLabel] = None
    mtype__pref_label__in: Optional[MtypePrefLabelIn] = None
    mtype__order_by: Optional[MtypeOrderBy] = 'pref_label'
    species__name: Optional[SpeciesName] = None
    species__name__in: Optional[SpeciesNameIn] = None
    species__name__ilike: Optional[SpeciesNameIlike] = None
    species__id: Optional[SpeciesId] = None
    species__order_by: Optional[SpeciesOrderBy] = 'name'
    strain__name: Optional[StrainName] = None
    strain__name__in: Optional[StrainNameIn] = None
    strain__name__ilike: Optional[StrainNameIlike] = None
    strain__id: Optional[StrainId] = None
    strain__order_by: Optional[StrainOrderBy] = 'name'
    morphology__creation_date__lte: Optional[MorphologyCreationDateLte] = None
    morphology__creation_date__gte: Optional[MorphologyCreationDateGte] = None
    morphology__update_date__lte: Optional[MorphologyUpdateDateLte] = None
    morphology__update_date__gte: Optional[MorphologyUpdateDateGte] = None
    morphology__name: Optional[MorphologyName] = None
    morphology__name__in: Optional[MorphologyNameIn] = None
    morphology__name__ilike: Optional[MorphologyNameIlike] = None
    morphology__id: Optional[MorphologyId] = None
    morphology__id__in: Optional[MorphologyIdIn] = None
    morphology__species_id_in: Optional[MorphologySpeciesIdIn] = None
    morphology__order_by: Optional[MorphologyOrderBy] = '-creation_date'
    measurement_annotation__creation_date__lte: Optional[
        MeasurementAnnotationCreationDateLte
    ] = None
    measurement_annotation__creation_date__gte: Optional[
        MeasurementAnnotationCreationDateGte
    ] = None
    measurement_annotation__update_date__lte: Optional[
        MeasurementAnnotationUpdateDateLte
    ] = None
    measurement_annotation__update_date__gte: Optional[
        MeasurementAnnotationUpdateDateGte
    ] = None
    measurement_kind__pref_label: Optional[MeasurementKindPrefLabel] = None
    measurement_kind__definition: Optional[MeasurementKindDefinition] = None
    measurement_kind__structural_domain: Optional[MeasurementKindStructuralDomain] = (
        None
    )
    measurement_item__name: Optional[MeasurementItemName] = None
    measurement_item__unit: Optional[MeasurementItemUnit] = None
    measurement_item__value__gte: Optional[MeasurementItemValueGte] = None
    measurement_item__value__lte: Optional[MeasurementItemValueLte] = None
    emodel__species_id_in: Optional[EmodelSpeciesIdIn] = None
    emodel__creation_date__lte: Optional[EmodelCreationDateLte] = None
    emodel__creation_date__gte: Optional[EmodelCreationDateGte] = None
    emodel__update_date__lte: Optional[EmodelUpdateDateLte] = None
    emodel__update_date__gte: Optional[EmodelUpdateDateGte] = None
    emodel__name: Optional[EmodelName] = None
    emodel__name__in: Optional[EmodelNameIn] = None
    emodel__name__ilike: Optional[EmodelNameIlike] = None
    emodel__id: Optional[EmodelId] = None
    emodel__id__in: Optional[EmodelIdIn] = None
    emodel__score__lte: Optional[EmodelScoreLte] = None
    emodel__score__gte: Optional[EmodelScoreGte] = None
    emodel__order_by: Optional[EmodelOrderBy] = '-creation_date'
    exemplar_morphology__creation_date__lte: Optional[
        ExemplarMorphologyCreationDateLte
    ] = None
    exemplar_morphology__creation_date__gte: Optional[
        ExemplarMorphologyCreationDateGte
    ] = None
    exemplar_morphology__update_date__lte: Optional[ExemplarMorphologyUpdateDateLte] = (
        None
    )
    exemplar_morphology__update_date__gte: Optional[ExemplarMorphologyUpdateDateGte] = (
        None
    )
    exemplar_morphology__name: Optional[ExemplarMorphologyName] = None
    exemplar_morphology__name__in: Optional[ExemplarMorphologyNameIn] = None
    exemplar_morphology__name__ilike: Optional[ExemplarMorphologyNameIlike] = None
    exemplar_morphology__id: Optional[ExemplarMorphologyId] = None
    exemplar_morphology__id__in: Optional[ExemplarMorphologyIdIn] = None
    exemplar_morphology__species_id_in: Optional[ExemplarMorphologySpeciesIdIn] = None
    exemplar_morphology__order_by: Optional[ExemplarMorphologyOrderBy] = (
        '-creation_date'
    )
    search: Optional[Search] = None
    within_brain_region_hierachy_id: Optional[WithinBrainRegionHierachyId] = None
    within_brain_region_brain_region_id: Optional[WithinBrainRegionBrainRegionId] = None
    within_brain_region_ascendants: Optional[bool] = False
    with_facets: Optional[bool] = False
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneSingleNeuronSimulationPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: SingleNeuronSimulationCreate = ...


class ReadOneSingleNeuronSimulationIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManySingleNeuronSynaptomeGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    creation_date__lte: Optional[CreationDateLte] = None
    creation_date__gte: Optional[CreationDateGte] = None
    update_date__lte: Optional[UpdateDateLte] = None
    update_date__gte: Optional[UpdateDateGte] = None
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    id__in: Optional[IdIn] = None
    order_by: Optional[OrderBy] = '-creation_date'
    contribution__id: Optional[ContributionId] = None
    contribution__pref_label: Optional[ContributionPrefLabel] = None
    contribution__pref_label__in: Optional[ContributionPrefLabelIn] = None
    contribution__order_by: Optional[ContributionOrderBy] = 'pref_label'
    brain_region__name: Optional[BrainRegionName] = None
    brain_region__name__in: Optional[BrainRegionNameIn] = None
    brain_region__name__ilike: Optional[BrainRegionNameIlike] = None
    brain_region__id: Optional[BrainRegionId] = None
    brain_region__id__in: Optional[BrainRegionIdIn] = None
    brain_region__acronym: Optional[BrainRegionAcronym] = None
    brain_region__acronym__in: Optional[BrainRegionAcronymIn] = None
    brain_region__order_by: Optional[BrainRegionOrderBy] = 'name'
    me_type__creation_date__lte: Optional[MeTypeCreationDateLte] = None
    me_type__creation_date__gte: Optional[MeTypeCreationDateGte] = None
    me_type__update_date__lte: Optional[MeTypeUpdateDateLte] = None
    me_type__update_date__gte: Optional[MeTypeUpdateDateGte] = None
    me_type__name: Optional[MeTypeName] = None
    me_type__name__in: Optional[MeTypeNameIn] = None
    me_type__name__ilike: Optional[MeTypeNameIlike] = None
    me_type__id: Optional[MeTypeId] = None
    me_type__id__in: Optional[MeTypeIdIn] = None
    me_type__species_id_in: Optional[MeTypeSpeciesIdIn] = None
    me_type__validation_status: Optional[MeTypeValidationStatus] = None
    me_type__order_by: Optional[MeTypeOrderBy] = '-creation_date'
    etype__id: Optional[EtypeId] = None
    etype__pref_label: Optional[EtypePrefLabel] = None
    etype__pref_label__in: Optional[EtypePrefLabelIn] = None
    etype__order_by: Optional[EtypeOrderBy] = 'pref_label'
    mtype__id: Optional[MtypeId] = None
    mtype__pref_label: Optional[MtypePrefLabel] = None
    mtype__pref_label__in: Optional[MtypePrefLabelIn] = None
    mtype__order_by: Optional[MtypeOrderBy] = 'pref_label'
    species__name: Optional[SpeciesName] = None
    species__name__in: Optional[SpeciesNameIn] = None
    species__name__ilike: Optional[SpeciesNameIlike] = None
    species__id: Optional[SpeciesId] = None
    species__order_by: Optional[SpeciesOrderBy] = 'name'
    strain__name: Optional[StrainName] = None
    strain__name__in: Optional[StrainNameIn] = None
    strain__name__ilike: Optional[StrainNameIlike] = None
    strain__id: Optional[StrainId] = None
    strain__order_by: Optional[StrainOrderBy] = 'name'
    morphology__creation_date__lte: Optional[MorphologyCreationDateLte] = None
    morphology__creation_date__gte: Optional[MorphologyCreationDateGte] = None
    morphology__update_date__lte: Optional[MorphologyUpdateDateLte] = None
    morphology__update_date__gte: Optional[MorphologyUpdateDateGte] = None
    morphology__name: Optional[MorphologyName] = None
    morphology__name__in: Optional[MorphologyNameIn] = None
    morphology__name__ilike: Optional[MorphologyNameIlike] = None
    morphology__id: Optional[MorphologyId] = None
    morphology__id__in: Optional[MorphologyIdIn] = None
    morphology__species_id_in: Optional[MorphologySpeciesIdIn] = None
    morphology__order_by: Optional[MorphologyOrderBy] = '-creation_date'
    measurement_annotation__creation_date__lte: Optional[
        MeasurementAnnotationCreationDateLte
    ] = None
    measurement_annotation__creation_date__gte: Optional[
        MeasurementAnnotationCreationDateGte
    ] = None
    measurement_annotation__update_date__lte: Optional[
        MeasurementAnnotationUpdateDateLte
    ] = None
    measurement_annotation__update_date__gte: Optional[
        MeasurementAnnotationUpdateDateGte
    ] = None
    measurement_kind__pref_label: Optional[MeasurementKindPrefLabel] = None
    measurement_kind__definition: Optional[MeasurementKindDefinition] = None
    measurement_kind__structural_domain: Optional[MeasurementKindStructuralDomain] = (
        None
    )
    measurement_item__name: Optional[MeasurementItemName] = None
    measurement_item__unit: Optional[MeasurementItemUnit] = None
    measurement_item__value__gte: Optional[MeasurementItemValueGte] = None
    measurement_item__value__lte: Optional[MeasurementItemValueLte] = None
    emodel__species_id_in: Optional[EmodelSpeciesIdIn] = None
    emodel__creation_date__lte: Optional[EmodelCreationDateLte] = None
    emodel__creation_date__gte: Optional[EmodelCreationDateGte] = None
    emodel__update_date__lte: Optional[EmodelUpdateDateLte] = None
    emodel__update_date__gte: Optional[EmodelUpdateDateGte] = None
    emodel__name: Optional[EmodelName] = None
    emodel__name__in: Optional[EmodelNameIn] = None
    emodel__name__ilike: Optional[EmodelNameIlike] = None
    emodel__id: Optional[EmodelId] = None
    emodel__id__in: Optional[EmodelIdIn] = None
    emodel__score__lte: Optional[EmodelScoreLte] = None
    emodel__score__gte: Optional[EmodelScoreGte] = None
    emodel__order_by: Optional[EmodelOrderBy] = '-creation_date'
    exemplar_morphology__creation_date__lte: Optional[
        ExemplarMorphologyCreationDateLte
    ] = None
    exemplar_morphology__creation_date__gte: Optional[
        ExemplarMorphologyCreationDateGte
    ] = None
    exemplar_morphology__update_date__lte: Optional[ExemplarMorphologyUpdateDateLte] = (
        None
    )
    exemplar_morphology__update_date__gte: Optional[ExemplarMorphologyUpdateDateGte] = (
        None
    )
    exemplar_morphology__name: Optional[ExemplarMorphologyName] = None
    exemplar_morphology__name__in: Optional[ExemplarMorphologyNameIn] = None
    exemplar_morphology__name__ilike: Optional[ExemplarMorphologyNameIlike] = None
    exemplar_morphology__id: Optional[ExemplarMorphologyId] = None
    exemplar_morphology__id__in: Optional[ExemplarMorphologyIdIn] = None
    exemplar_morphology__species_id_in: Optional[ExemplarMorphologySpeciesIdIn] = None
    exemplar_morphology__order_by: Optional[ExemplarMorphologyOrderBy] = (
        '-creation_date'
    )
    search: Optional[Search] = None
    within_brain_region_hierachy_id: Optional[WithinBrainRegionHierachyId] = None
    within_brain_region_brain_region_id: Optional[WithinBrainRegionBrainRegionId] = None
    within_brain_region_ascendants: Optional[bool] = False
    with_facets: Optional[bool] = False
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneSingleNeuronSynaptomePostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: SingleNeuronSynaptomeCreate = ...


class ReadManySingleNeuronSynaptomeSimulationGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    creation_date__lte: Optional[CreationDateLte] = None
    creation_date__gte: Optional[CreationDateGte] = None
    update_date__lte: Optional[UpdateDateLte] = None
    update_date__gte: Optional[UpdateDateGte] = None
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    id__in: Optional[IdIn] = None
    status: Optional[Status] = None
    order_by: Optional[OrderBy] = '-creation_date'
    brain_region__name: Optional[BrainRegionName] = None
    brain_region__name__in: Optional[BrainRegionNameIn] = None
    brain_region__name__ilike: Optional[BrainRegionNameIlike] = None
    brain_region__id: Optional[BrainRegionId] = None
    brain_region__id__in: Optional[BrainRegionIdIn] = None
    brain_region__acronym: Optional[BrainRegionAcronym] = None
    brain_region__acronym__in: Optional[BrainRegionAcronymIn] = None
    brain_region__order_by: Optional[BrainRegionOrderBy] = 'name'
    contribution__id: Optional[ContributionId] = None
    contribution__pref_label: Optional[ContributionPrefLabel] = None
    contribution__pref_label__in: Optional[ContributionPrefLabelIn] = None
    contribution__order_by: Optional[ContributionOrderBy] = 'pref_label'
    synaptome__creation_date__lte: Optional[SynaptomeCreationDateLte] = None
    synaptome__creation_date__gte: Optional[SynaptomeCreationDateGte] = None
    synaptome__update_date__lte: Optional[SynaptomeUpdateDateLte] = None
    synaptome__update_date__gte: Optional[SynaptomeUpdateDateGte] = None
    synaptome__name: Optional[SynaptomeName] = None
    synaptome__name__in: Optional[SynaptomeNameIn] = None
    synaptome__name__ilike: Optional[SynaptomeNameIlike] = None
    synaptome__id: Optional[SynaptomeId] = None
    synaptome__id__in: Optional[SynaptomeIdIn] = None
    synaptome__order_by: Optional[SynaptomeOrderBy] = '-creation_date'
    me_type__creation_date__lte: Optional[MeTypeCreationDateLte] = None
    me_type__creation_date__gte: Optional[MeTypeCreationDateGte] = None
    me_type__update_date__lte: Optional[MeTypeUpdateDateLte] = None
    me_type__update_date__gte: Optional[MeTypeUpdateDateGte] = None
    me_type__name: Optional[MeTypeName] = None
    me_type__name__in: Optional[MeTypeNameIn] = None
    me_type__name__ilike: Optional[MeTypeNameIlike] = None
    me_type__id: Optional[MeTypeId] = None
    me_type__id__in: Optional[MeTypeIdIn] = None
    me_type__species_id_in: Optional[MeTypeSpeciesIdIn] = None
    me_type__validation_status: Optional[MeTypeValidationStatus] = None
    me_type__order_by: Optional[MeTypeOrderBy] = '-creation_date'
    etype__id: Optional[EtypeId] = None
    etype__pref_label: Optional[EtypePrefLabel] = None
    etype__pref_label__in: Optional[EtypePrefLabelIn] = None
    etype__order_by: Optional[EtypeOrderBy] = 'pref_label'
    mtype__id: Optional[MtypeId] = None
    mtype__pref_label: Optional[MtypePrefLabel] = None
    mtype__pref_label__in: Optional[MtypePrefLabelIn] = None
    mtype__order_by: Optional[MtypeOrderBy] = 'pref_label'
    species__name: Optional[SpeciesName] = None
    species__name__in: Optional[SpeciesNameIn] = None
    species__name__ilike: Optional[SpeciesNameIlike] = None
    species__id: Optional[SpeciesId] = None
    species__order_by: Optional[SpeciesOrderBy] = 'name'
    strain__name: Optional[StrainName] = None
    strain__name__in: Optional[StrainNameIn] = None
    strain__name__ilike: Optional[StrainNameIlike] = None
    strain__id: Optional[StrainId] = None
    strain__order_by: Optional[StrainOrderBy] = 'name'
    morphology__creation_date__lte: Optional[MorphologyCreationDateLte] = None
    morphology__creation_date__gte: Optional[MorphologyCreationDateGte] = None
    morphology__update_date__lte: Optional[MorphologyUpdateDateLte] = None
    morphology__update_date__gte: Optional[MorphologyUpdateDateGte] = None
    morphology__name: Optional[MorphologyName] = None
    morphology__name__in: Optional[MorphologyNameIn] = None
    morphology__name__ilike: Optional[MorphologyNameIlike] = None
    morphology__id: Optional[MorphologyId] = None
    morphology__id__in: Optional[MorphologyIdIn] = None
    morphology__species_id_in: Optional[MorphologySpeciesIdIn] = None
    morphology__order_by: Optional[MorphologyOrderBy] = '-creation_date'
    measurement_annotation__creation_date__lte: Optional[
        MeasurementAnnotationCreationDateLte
    ] = None
    measurement_annotation__creation_date__gte: Optional[
        MeasurementAnnotationCreationDateGte
    ] = None
    measurement_annotation__update_date__lte: Optional[
        MeasurementAnnotationUpdateDateLte
    ] = None
    measurement_annotation__update_date__gte: Optional[
        MeasurementAnnotationUpdateDateGte
    ] = None
    measurement_kind__pref_label: Optional[MeasurementKindPrefLabel] = None
    measurement_kind__definition: Optional[MeasurementKindDefinition] = None
    measurement_kind__structural_domain: Optional[MeasurementKindStructuralDomain] = (
        None
    )
    measurement_item__name: Optional[MeasurementItemName] = None
    measurement_item__unit: Optional[MeasurementItemUnit] = None
    measurement_item__value__gte: Optional[MeasurementItemValueGte] = None
    measurement_item__value__lte: Optional[MeasurementItemValueLte] = None
    emodel__species_id_in: Optional[EmodelSpeciesIdIn] = None
    emodel__creation_date__lte: Optional[EmodelCreationDateLte] = None
    emodel__creation_date__gte: Optional[EmodelCreationDateGte] = None
    emodel__update_date__lte: Optional[EmodelUpdateDateLte] = None
    emodel__update_date__gte: Optional[EmodelUpdateDateGte] = None
    emodel__name: Optional[EmodelName] = None
    emodel__name__in: Optional[EmodelNameIn] = None
    emodel__name__ilike: Optional[EmodelNameIlike] = None
    emodel__id: Optional[EmodelId] = None
    emodel__id__in: Optional[EmodelIdIn] = None
    emodel__score__lte: Optional[EmodelScoreLte] = None
    emodel__score__gte: Optional[EmodelScoreGte] = None
    emodel__order_by: Optional[EmodelOrderBy] = '-creation_date'
    exemplar_morphology__creation_date__lte: Optional[
        ExemplarMorphologyCreationDateLte
    ] = None
    exemplar_morphology__creation_date__gte: Optional[
        ExemplarMorphologyCreationDateGte
    ] = None
    exemplar_morphology__update_date__lte: Optional[ExemplarMorphologyUpdateDateLte] = (
        None
    )
    exemplar_morphology__update_date__gte: Optional[ExemplarMorphologyUpdateDateGte] = (
        None
    )
    exemplar_morphology__name: Optional[ExemplarMorphologyName] = None
    exemplar_morphology__name__in: Optional[ExemplarMorphologyNameIn] = None
    exemplar_morphology__name__ilike: Optional[ExemplarMorphologyNameIlike] = None
    exemplar_morphology__id: Optional[ExemplarMorphologyId] = None
    exemplar_morphology__id__in: Optional[ExemplarMorphologyIdIn] = None
    exemplar_morphology__species_id_in: Optional[ExemplarMorphologySpeciesIdIn] = None
    exemplar_morphology__order_by: Optional[ExemplarMorphologyOrderBy] = (
        '-creation_date'
    )
    search: Optional[Search] = None
    within_brain_region_hierachy_id: Optional[WithinBrainRegionHierachyId] = None
    within_brain_region_brain_region_id: Optional[WithinBrainRegionBrainRegionId] = None
    within_brain_region_ascendants: Optional[bool] = False
    with_facets: Optional[bool] = False
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneSingleNeuronSynaptomeSimulationPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: SingleNeuronSynaptomeSimulationCreate = ...


class ReadOneSingleNeuronSynaptomeSimulationIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadOneSingleNeuronSynaptomeIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManySpeciesGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    order_by: Optional[OrderBy] = 'name'
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneSpeciesPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: SpeciesCreate = ...


class ReadOneSpeciesIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManyStrainGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    id: Optional[Id] = None
    order_by: Optional[OrderBy] = 'name'
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneStrainPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: StrainCreate = ...


class ReadOneStrainIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class ReadManySubjectGetParams(BaseModel):
    """Read Many."""

    page: Optional[conint(ge=1)] = 1
    page_size: Optional[conint(ge=1)] = 100
    name: Optional[Name] = None
    name__in: Optional[NameIn] = None
    name__ilike: Optional[NameIlike] = None
    species_id_in: Optional[SpeciesIdIn] = None
    id: Optional[Id] = None
    order_by: Optional[OrderBy] = '-creation_date'
    species__name: Optional[SpeciesName] = None
    species__name__in: Optional[SpeciesNameIn] = None
    species__name__ilike: Optional[SpeciesNameIlike] = None
    species__id: Optional[SpeciesId] = None
    species__order_by: Optional[SpeciesOrderBy] = 'name'
    strain__name: Optional[StrainName] = None
    strain__name__in: Optional[StrainNameIn] = None
    strain__name__ilike: Optional[StrainNameIlike] = None
    strain__id: Optional[StrainId] = None
    strain__order_by: Optional[StrainOrderBy] = 'name'
    contribution__id: Optional[ContributionId] = None
    contribution__pref_label: Optional[ContributionPrefLabel] = None
    contribution__pref_label__in: Optional[ContributionPrefLabelIn] = None
    contribution__order_by: Optional[ContributionOrderBy] = 'pref_label'
    search: Optional[Search] = None
    with_facets: Optional[bool] = False
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class CreateOneSubjectPostParams(BaseModel):
    """Create One."""

    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    body: SubjectCreate = ...


class ReadOneSubjectIdGetParams(BaseModel):
    """Read One."""

    id_: UUID
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class VersionVersionGetParams(BaseModel):
    """Version."""


class GetEntityAssetsEntityRouteEntityIdAssetsGetParams(BaseModel):
    """Get Entity Assets."""

    entity_route: EntityRoute
    entity_id: UUID = ...
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class UploadEntityAssetEntityRouteEntityIdAssetsPostParams(BaseModel):
    """Upload Entity Asset."""

    entity_route: EntityRoute
    entity_id: UUID = ...
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
    file: UploadFile = ...


class GetEntityAssetEntityRouteEntityIdAssetsAssetIdGetParams(BaseModel):
    """Get Entity Asset."""

    entity_route: EntityRoute
    entity_id: UUID = ...
    asset_id: UUID = ...
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class DeleteEntityAssetEntityRouteEntityIdAssetsAssetIdDeleteParams(BaseModel):
    """Delete Entity Asset."""

    entity_route: EntityRoute
    entity_id: UUID = ...
    asset_id: UUID = ...
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')


class DownloadEntityAssetEntityRouteEntityIdAssetsAssetIdDownloadGetParams(BaseModel):
    """Download Entity Asset."""

    entity_route: EntityRoute
    entity_id: UUID = ...
    asset_id: UUID = ...
    asset_path: Optional[AssetPath] = None
    virtual_lab_id: Optional[VirtualLabId] = Header(None, alias='virtual-lab-id')
    project_id: Optional[ProjectId] = Header(None, alias='project-id')
