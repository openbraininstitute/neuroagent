# generated by datamodel-codegen:
#   filename:  https://staging.openbraininstitute.org/api/entitycore/openapi.json
#   timestamp: 2025-07-01T15:13:17+00:00

from __future__ import annotations

from datetime import datetime
from pathlib import Path
from typing import Any, Literal
from uuid import UUID

from pydantic import UUID4, AnyUrl, BaseModel, ConfigDict, Field, RootModel


class ActivityType(RootModel[Literal['simulation_execution', 'simulation_generation']]):
    root: Literal['simulation_execution', 'simulation_generation'] = Field(
        ..., description='Activity types.', title='ActivityType'
    )


class AgePeriod(RootModel[Literal['prenatal', 'postnatal', 'unknown']]):
    root: Literal['prenatal', 'postnatal', 'unknown'] = Field(..., title='AgePeriod')


class Annotation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    pref_label: str = Field(..., title='Pref Label')
    alt_label: str = Field(..., title='Alt Label')
    definition: str = Field(..., title='Definition')


class ApiErrorCode(
    RootModel[
        Literal[
            'GENERIC_ERROR',
            'NOT_AUTHENTICATED',
            'NOT_AUTHORIZED',
            'INVALID_REQUEST',
            'ENTITY_NOT_FOUND',
            'ENTITY_FORBIDDEN',
            'ENTITY_DUPLICATED',
            'ASSET_NOT_FOUND',
            'ASSET_DUPLICATED',
            'ASSET_INVALID_FILE',
            'ASSET_MISSING_PATH',
            'ASSET_INVALID_PATH',
            'ASSET_NOT_A_DIRECTORY',
            'ASSET_INVALID_SCHEMA',
            'ASSET_INVALID_CONTENT_TYPE',
            'ION_NAME_NOT_FOUND',
            'S3_CANNOT_CREATE_PRESIGNED_URL',
        ]
    ]
):
    root: Literal[
        'GENERIC_ERROR',
        'NOT_AUTHENTICATED',
        'NOT_AUTHORIZED',
        'INVALID_REQUEST',
        'ENTITY_NOT_FOUND',
        'ENTITY_FORBIDDEN',
        'ENTITY_DUPLICATED',
        'ASSET_NOT_FOUND',
        'ASSET_DUPLICATED',
        'ASSET_INVALID_FILE',
        'ASSET_MISSING_PATH',
        'ASSET_INVALID_PATH',
        'ASSET_NOT_A_DIRECTORY',
        'ASSET_INVALID_SCHEMA',
        'ASSET_INVALID_CONTENT_TYPE',
        'ION_NAME_NOT_FOUND',
        'S3_CANNOT_CREATE_PRESIGNED_URL',
    ] = Field(..., description='API Error codes.', title='ApiErrorCode')


class AssetLabel(
    RootModel[
        Literal[
            'morphology',
            'cell_composition_summary',
            'cell_composition_volumes',
            'single_neuron_synaptome_config',
            'single_neuron_synaptome_simulation_data',
            'single_cell_simulation_data',
            'sonata_circuit',
            'nwb',
            'neuron_hoc',
            'emodel_optimization_output',
            'sonata_simulation_config',
            'simulation_generation_config',
            'custom_node_sets',
            'campaign_generation_config',
            'campaign_summary',
            'replay_spikes',
            'voltage_report',
            'spike_report',
            'neuron_mechanisms',
            'brain_atlas_annotation',
            'brain_region_mesh',
            'voxel_densities',
            'validation_result_figure',
            'validation_result_details',
            'simulation_designer_image',
        ]
    ]
):
    root: Literal[
        'morphology',
        'cell_composition_summary',
        'cell_composition_volumes',
        'single_neuron_synaptome_config',
        'single_neuron_synaptome_simulation_data',
        'single_cell_simulation_data',
        'sonata_circuit',
        'nwb',
        'neuron_hoc',
        'emodel_optimization_output',
        'sonata_simulation_config',
        'simulation_generation_config',
        'custom_node_sets',
        'campaign_generation_config',
        'campaign_summary',
        'replay_spikes',
        'voltage_report',
        'spike_report',
        'neuron_mechanisms',
        'brain_atlas_annotation',
        'brain_region_mesh',
        'voxel_densities',
        'validation_result_figure',
        'validation_result_details',
        'simulation_designer_image',
    ] = Field(..., description='See docs/asset-labels.md.', title='AssetLabel')


class AssetStatus(RootModel[Literal['created', 'deleted']]):
    root: Literal['created', 'deleted'] = Field(..., title='AssetStatus')


class BodyUploadEntityAssetEntityRouteEntityIdAssetsPost(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    file: bytes = Field(..., title='File')
    label: AssetLabel
    meta: dict[str, Any] | None = Field(default=None, title='Meta')


class BrainRegionRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    id: UUID = Field(..., title='Id')
    annotation_value: int = Field(..., title='Annotation Value')
    name: str = Field(..., title='Name')
    acronym: str = Field(..., title='Acronym')
    color_hex_triplet: str = Field(..., title='Color Hex Triplet')
    parent_structure_id: UUID | None = Field(..., title='Parent Structure Id')
    hierarchy_id: UUID = Field(..., title='Hierarchy Id')


class CircuitBuildCategory(
    RootModel[Literal['computational_model', 'em_reconstruction']]
):
    root: Literal['computational_model', 'em_reconstruction'] = Field(
        ...,
        description='Information about how/from what source a circuit was built.\n\n- computational_model: Any type of data-driven or statistical model\n- em_reconstruction: Reconstruction from EM\n(More categories may be added later, if needed).',
        title='CircuitBuildCategory',
    )


class CircuitScale(
    RootModel[
        Literal[
            'single', 'pair', 'small', 'microcircuit', 'region', 'system', 'whole_brain'
        ]
    ]
):
    root: Literal[
        'single', 'pair', 'small', 'microcircuit', 'region', 'system', 'whole_brain'
    ] = Field(
        ...,
        description='Scale of the circuit.\n\n- single: Single neuron + extrinsic connectivity\n- pair: Two connected neurons + intrinsic connectivity + extrinsic connectivity\n- small: Small microcircuit (3-20 neurons) + intrinsic connectivity + extrinsic connectivity;\n  usually containing specific connectivity motifs\n- microcircuit: Any circuit larger than 20 neurons but not being a region, system, or\n  whole-brain circuit; may be atlas-based or not\n- region: Atlas-based continuous volume of an entire brain region or a set of continuous\n  sub-regions\n- system: Non-continuous circuit consisting of at least two microcircuits/regions that are\n  connected by inter-region connectivity\n- whole_brain: Circuit representing an entire brain.',
        title='CircuitScale',
    )


class ContentType(
    RootModel[
        Literal[
            'application/json',
            'application/swc',
            'application/nrrd',
            'application/obj',
            'application/hoc',
            'application/asc',
            'application/abf',
            'application/nwb',
            'application/x-hdf5',
            'text/plain',
            'application/vnd.directory',
            'application/mod',
            'application/pdf',
            'image/png',
            'image/jpeg',
        ]
    ]
):
    root: Literal[
        'application/json',
        'application/swc',
        'application/nrrd',
        'application/obj',
        'application/hoc',
        'application/asc',
        'application/abf',
        'application/nwb',
        'application/x-hdf5',
        'text/plain',
        'application/vnd.directory',
        'application/mod',
        'application/pdf',
        'image/png',
        'image/jpeg',
    ] = Field(..., title='ContentType')


class ContributionCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    agent_id: UUID = Field(..., title='Agent Id')
    role_id: UUID = Field(..., title='Role Id')
    entity_id: UUID = Field(..., title='Entity Id')


class DetailedFile(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: str = Field(..., title='Name')
    size: int = Field(..., title='Size')
    last_modified: datetime = Field(..., title='Last Modified')


class DetailedFileList(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    files: dict[str, DetailedFile] = Field(..., title='Files')


class DirectoryUpload(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    directory_name: Path = Field(..., title='Directory Name')
    files: list[Path] = Field(..., title='Files')
    meta: dict[str, Any] | None = Field(..., title='Meta')
    label: AssetLabel


class EModelCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    description: str = Field(..., title='Description')
    name: str = Field(..., title='Name')
    iteration: str = Field(..., title='Iteration')
    score: float = Field(..., title='Score')
    seed: int = Field(..., title='Seed')
    species_id: UUID = Field(..., title='Species Id')
    strain_id: UUID | None = Field(default=None, title='Strain Id')
    brain_region_id: UUID = Field(..., title='Brain Region Id')
    exemplar_morphology_id: UUID = Field(..., title='Exemplar Morphology Id')


class ETypeClassificationCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    entity_id: UUID = Field(..., title='Entity Id')
    etype_class_id: UUID = Field(..., title='Etype Class Id')


class ElectricalRecordingOrigin(
    RootModel[Literal['in_vivo', 'in_vitro', 'in_silico', 'unknown']]
):
    root: Literal['in_vivo', 'in_vitro', 'in_silico', 'unknown'] = Field(
        ..., title='ElectricalRecordingOrigin'
    )


class ElectricalRecordingStimulusShape(
    RootModel[
        Literal[
            'cheops',
            'constant',
            'pulse',
            'step',
            'ramp',
            'noise',
            'sinusoidal',
            'other',
            'two_steps',
            'unknown',
        ]
    ]
):
    root: Literal[
        'cheops',
        'constant',
        'pulse',
        'step',
        'ramp',
        'noise',
        'sinusoidal',
        'other',
        'two_steps',
        'unknown',
    ] = Field(..., title='ElectricalRecordingStimulusShape')


class ElectricalRecordingStimulusType(
    RootModel[
        Literal[
            'voltage_clamp',
            'current_clamp',
            'conductance_clamp',
            'extracellular',
            'other',
            'unknown',
        ]
    ]
):
    root: Literal[
        'voltage_clamp',
        'current_clamp',
        'conductance_clamp',
        'extracellular',
        'other',
        'unknown',
    ] = Field(..., title='ElectricalRecordingStimulusType')


class ElectricalRecordingType(
    RootModel[Literal['intracellular', 'extracellular', 'both', 'unknown']]
):
    root: Literal['intracellular', 'extracellular', 'both', 'unknown'] = Field(
        ..., title='ElectricalRecordingType'
    )


class EntityRoute(
    RootModel[
        Literal[
            'analysis-software-source-code',
            'brain-atlas',
            'brain-atlas-region',
            'cell-composition',
            'electrical-cell-recording',
            'electrical-recording-stimulus',
            'emodel',
            'experimental-bouton-density',
            'experimental-neuron-density',
            'experimental-synapses-per-connection',
            'ion-channel-model',
            'memodel',
            'mesh',
            'memodel-calibration-result',
            'me-type-density',
            'publication',
            'reconstruction-morphology',
            'simulation',
            'simulation-campaign',
            'simulation-campaign-generation',
            'simulation-execution',
            'simulation-result',
            'scientific-artifact',
            'single-neuron-simulation',
            'single-neuron-synaptome',
            'single-neuron-synaptome-simulation',
            'subject',
            'validation-result',
            'circuit',
        ]
    ]
):
    root: Literal[
        'analysis-software-source-code',
        'brain-atlas',
        'brain-atlas-region',
        'cell-composition',
        'electrical-cell-recording',
        'electrical-recording-stimulus',
        'emodel',
        'experimental-bouton-density',
        'experimental-neuron-density',
        'experimental-synapses-per-connection',
        'ion-channel-model',
        'memodel',
        'mesh',
        'memodel-calibration-result',
        'me-type-density',
        'publication',
        'reconstruction-morphology',
        'simulation',
        'simulation-campaign',
        'simulation-campaign-generation',
        'simulation-execution',
        'simulation-result',
        'scientific-artifact',
        'single-neuron-simulation',
        'single-neuron-synaptome',
        'single-neuron-synaptome-simulation',
        'subject',
        'validation-result',
        'circuit',
    ] = Field(..., title='EntityRoute')


class EntityType(
    RootModel[
        Literal[
            'analysis_software_source_code',
            'brain_atlas',
            'brain_atlas_region',
            'cell_composition',
            'electrical_cell_recording',
            'electrical_recording_stimulus',
            'emodel',
            'experimental_bouton_density',
            'experimental_neuron_density',
            'experimental_synapses_per_connection',
            'ion_channel_model',
            'memodel',
            'mesh',
            'memodel_calibration_result',
            'me_type_density',
            'publication',
            'reconstruction_morphology',
            'simulation',
            'simulation_campaign',
            'simulation_campaign_generation',
            'simulation_execution',
            'simulation_result',
            'scientific_artifact',
            'single_neuron_simulation',
            'single_neuron_synaptome',
            'single_neuron_synaptome_simulation',
            'subject',
            'validation_result',
            'circuit',
        ]
    ]
):
    root: Literal[
        'analysis_software_source_code',
        'brain_atlas',
        'brain_atlas_region',
        'cell_composition',
        'electrical_cell_recording',
        'electrical_recording_stimulus',
        'emodel',
        'experimental_bouton_density',
        'experimental_neuron_density',
        'experimental_synapses_per_connection',
        'ion_channel_model',
        'memodel',
        'mesh',
        'memodel_calibration_result',
        'me_type_density',
        'publication',
        'reconstruction_morphology',
        'simulation',
        'simulation_campaign',
        'simulation_campaign_generation',
        'simulation_execution',
        'simulation_result',
        'scientific_artifact',
        'single_neuron_simulation',
        'single_neuron_synaptome',
        'single_neuron_synaptome_simulation',
        'subject',
        'validation_result',
        'circuit',
    ] = Field(..., description='Entity types.', title='EntityType')


class ErrorResponse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    error_code: ApiErrorCode
    message: str = Field(..., title='Message')
    details: Any | None = Field(default=None, title='Details')


class ExperimentalBoutonDensityCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    license_id: UUID | None = Field(default=None, title='License Id')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    subject_id: UUID = Field(..., title='Subject Id')
    brain_region_id: UUID = Field(..., title='Brain Region Id')
    legacy_id: str | None = Field(..., title='Legacy Id')


ExperimentalNeuronDensityCreate = ExperimentalBoutonDensityCreate


class ExperimentalSynapsesPerConnectionCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    license_id: UUID | None = Field(default=None, title='License Id')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    subject_id: UUID = Field(..., title='Subject Id')
    brain_region_id: UUID = Field(..., title='Brain Region Id')
    legacy_id: str | None = Field(..., title='Legacy Id')
    pre_mtype_id: UUID = Field(..., title='Pre Mtype Id')
    post_mtype_id: UUID = Field(..., title='Post Mtype Id')
    pre_region_id: UUID = Field(..., title='Pre Region Id')
    post_region_id: UUID = Field(..., title='Post Region Id')


class Facet(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID | int = Field(..., title='Id')
    label: str = Field(..., title='Label')
    count: int = Field(..., title='Count')
    type: str | None = Field(..., title='Type')


class Facets(RootModel[dict[str, list[Facet]] | None]):
    root: dict[str, list[Facet]] | None = None


class LicenseCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    label: str = Field(..., title='Label')


class LicenseRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    label: str = Field(..., title='Label')


class MEModelCalibrationResultCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    holding_current: float = Field(..., title='Holding Current')
    threshold_current: float = Field(..., title='Threshold Current')
    rin: float | None = Field(default=None, title='Rin')
    calibrated_entity_id: UUID = Field(..., title='Calibrated Entity Id')


class MTypeClassificationCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    entity_id: UUID = Field(..., title='Entity Id')
    mtype_class_id: UUID = Field(..., title='Mtype Class Id')


class MeasurableEntity(RootModel[Literal['reconstruction_morphology']]):
    root: Literal['reconstruction_morphology'] = Field(..., title='MeasurableEntity')


class MeasurementStatistic(
    RootModel[
        Literal[
            'mean',
            'median',
            'mode',
            'variance',
            'data_point',
            'sample_size',
            'standard_error',
            'standard_deviation',
            'raw',
            'minimum',
            'maximum',
            'sum',
        ]
    ]
):
    root: Literal[
        'mean',
        'median',
        'mode',
        'variance',
        'data_point',
        'sample_size',
        'standard_error',
        'standard_deviation',
        'raw',
        'minimum',
        'maximum',
        'sum',
    ] = Field(..., title='MeasurementStatistic')


class MeasurementUnit(
    RootModel[Literal['dimensionless', '1/μm', '1/mm³', 'μm', 'μm²', 'μm³', 'radian']]
):
    root: Literal['dimensionless', '1/μm', '1/mm³', 'μm', 'μm²', 'μm³', 'radian'] = (
        Field(..., title='MeasurementUnit')
    )


class NestedEntityRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    type: str = Field(..., title='Type')
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool = Field(..., title='Authorized Public')


class NestedOrganizationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    pref_label: str = Field(..., title='Pref Label')
    alternative_name: str | None = Field(default=None, title='Alternative Name')
    type: str = Field(..., title='Type')


class NestedPersonRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    given_name: str | None = Field(default=None, title='Given Name')
    family_name: str | None = Field(default=None, title='Family Name')
    pref_label: str = Field(..., title='Pref Label')
    type: str = Field(..., title='Type')
    sub_id: UUID | None = Field(..., title='Sub Id')


class NestedSimulationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    type: EntityType | None = None
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    simulation_campaign_id: UUID = Field(..., title='Simulation Campaign Id')
    entity_id: UUID = Field(..., title='Entity Id')
    scan_parameters: dict[str, Any] = Field(..., title='Scan Parameters')


class NestedSpeciesRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    name: str = Field(..., title='Name')
    taxonomy_id: str = Field(..., title='Taxonomy Id')


class NestedStrainRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    name: str = Field(..., title='Name')
    taxonomy_id: str = Field(..., title='Taxonomy Id')
    species_id: UUID = Field(..., title='Species Id')


class Weight(RootModel[float]):
    root: float = Field(..., description='Weight in grams', gt=0.0, title='Weight')


class NestedSynaptome(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    seed: int = Field(..., title='Seed')


class OrganizationCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    pref_label: str = Field(..., title='Pref Label')
    alternative_name: str | None = Field(default=None, title='Alternative Name')
    legacy_id: str | None = Field(default=None, title='Legacy Id')


class OrganizationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    pref_label: str = Field(..., title='Pref Label')
    alternative_name: str | None = Field(default=None, title='Alternative Name')
    type: str = Field(..., title='Type')


class PaginationResponse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    page: int = Field(..., title='Page')
    page_size: int = Field(..., title='Page Size')
    total_items: int = Field(..., title='Total Items')


class PersonCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    given_name: str | None = Field(default=None, title='Given Name')
    family_name: str | None = Field(default=None, title='Family Name')
    pref_label: str = Field(..., title='Pref Label')
    legacy_id: str | None = Field(default=None, title='Legacy Id')


class PersonRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    id: UUID = Field(..., title='Id')
    given_name: str | None = Field(default=None, title='Given Name')
    family_name: str | None = Field(default=None, title='Family Name')
    pref_label: str = Field(..., title='Pref Label')
    type: str = Field(..., title='Type')
    sub_id: UUID | None = Field(..., title='Sub Id')


class PointLocationBase(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    x: float = Field(..., title='X')
    y: float = Field(..., title='Y')
    z: float = Field(..., title='Z')


class ReconstructionMorphologyCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    license_id: UUID | None = Field(default=None, title='License Id')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    location: PointLocationBase | None = None
    legacy_id: list[str] | None = Field(default=None, title='Legacy Id')
    species_id: UUID = Field(..., title='Species Id')
    strain_id: UUID | None = Field(default=None, title='Strain Id')
    brain_region_id: UUID = Field(..., title='Brain Region Id')


class RoleCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: str = Field(..., title='Name')
    role_id: str = Field(..., title='Role Id')


class RoleRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    role_id: str = Field(..., title='Role Id')


class Sex(RootModel[Literal['male', 'female', 'unknown']]):
    root: Literal['male', 'female', 'unknown'] = Field(..., title='Sex')


class SimulationCampaignCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    scan_parameters: dict[str, Any] = Field(..., title='Scan Parameters')
    entity_id: UUID = Field(..., title='Entity Id')


class SimulationCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    simulation_campaign_id: UUID = Field(..., title='Simulation Campaign Id')
    entity_id: UUID = Field(..., title='Entity Id')
    scan_parameters: dict[str, Any] = Field(..., title='Scan Parameters')


class SimulationExecutionStatus(
    RootModel[Literal['created', 'pending', 'running', 'done', 'error']]
):
    root: Literal['created', 'pending', 'running', 'done', 'error'] = Field(
        ..., title='SimulationExecutionStatus'
    )


class SimulationExecutionUpdate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    start_time: datetime | None = Field(default=None, title='Start Time')
    end_time: datetime | None = Field(default=None, title='End Time')
    generated_ids: list[UUID] | None = Field(default=None, title='Generated Ids')
    status: SimulationExecutionStatus | None = None


class SimulationGenerationCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    start_time: datetime | None = Field(default=None, title='Start Time')
    end_time: datetime | None = Field(default=None, title='End Time')
    used_ids: list[UUID] | None = Field(default=[], title='Used Ids')
    generated_ids: list[UUID] | None = Field(default=[], title='Generated Ids')


class SimulationGenerationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    id: UUID = Field(..., title='Id')
    type: ActivityType | None = None
    start_time: datetime | None = Field(default=None, title='Start Time')
    end_time: datetime | None = Field(default=None, title='End Time')
    used: list[NestedEntityRead] = Field(..., title='Used')
    generated: list[NestedEntityRead] = Field(..., title='Generated')


class SimulationGenerationUpdate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    start_time: datetime | None = Field(default=None, title='Start Time')
    end_time: datetime | None = Field(default=None, title='End Time')
    generated_ids: list[UUID] | None = Field(default=None, title='Generated Ids')


class SimulationResultCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    simulation_id: UUID = Field(..., title='Simulation Id')


class SingleNeuronSimulationStatus(RootModel[Literal['started', 'failure', 'success']]):
    root: Literal['started', 'failure', 'success'] = Field(
        ..., title='SingleNeuronSimulationStatus'
    )


class SingleNeuronSynaptomeCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    seed: int = Field(..., title='Seed')
    me_model_id: UUID = Field(..., title='Me Model Id')
    brain_region_id: UUID = Field(..., title='Brain Region Id')


class SingleNeuronSynaptomeSimulationCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    brain_region_id: UUID = Field(..., title='Brain Region Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    seed: int = Field(..., title='Seed')
    status: SingleNeuronSimulationStatus
    injection_location: list[str] = Field(..., title='Injection Location')
    recording_location: list[str] = Field(..., title='Recording Location')
    synaptome_id: UUID = Field(..., title='Synaptome Id')


class SpeciesCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: str = Field(..., title='Name')
    taxonomy_id: str = Field(..., title='Taxonomy Id')


class SpeciesRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    taxonomy_id: str = Field(..., title='Taxonomy Id')


class StrainCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: str = Field(..., title='Name')
    taxonomy_id: str = Field(..., title='Taxonomy Id')
    species_id: UUID = Field(..., title='Species Id')


class StrainRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    taxonomy_id: str = Field(..., title='Taxonomy Id')
    species_id: UUID = Field(..., title='Species Id')


class StructuralDomain(
    RootModel[
        Literal[
            'apical_dendrite', 'basal_dendrite', 'axon', 'soma', 'neuron_morphology'
        ]
    ]
):
    root: Literal[
        'apical_dendrite', 'basal_dendrite', 'axon', 'soma', 'neuron_morphology'
    ] = Field(..., title='StructuralDomain')


class SubjectCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    sex: Sex = Field(..., description='Sex of the subject', title='Sex')
    weight: Weight | None = Field(
        default=None, description='Weight in grams', title='Weight'
    )
    age_value: float | None = Field(
        default=None, description='Age value interval.', title='Age value'
    )
    age_min: float | None = Field(
        default=None, description='Minimum age range', title='Minimum age range'
    )
    age_max: float | None = Field(
        default=None, description='Maximum age range', title='Maximum age range'
    )
    age_period: AgePeriod | None = None
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    species_id: UUID = Field(..., title='Species Id')


class SubjectRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    sex: Sex = Field(..., description='Sex of the subject')
    weight: Weight | None = Field(
        default=None, description='Weight in grams', title='Weight'
    )
    age_value: float | None = Field(
        default=None, description='Age value interval.', title='Age value'
    )
    age_min: float | None = Field(
        default=None, description='Minimum age range', title='Minimum age range'
    )
    age_max: float | None = Field(
        default=None, description='Maximum age range', title='Maximum age range'
    )
    age_period: AgePeriod | None = None
    species: NestedSpeciesRead


class UseIon(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    ion_name: str = Field(..., title='Ion Name')
    read: list[str] | None = Field(default=[], title='Read')
    write: list[str] | None = Field(default=[], title='Write')
    valence: int | None = Field(default=None, title='Valence')
    main_ion: bool | None = Field(default=None, title='Main Ion')


class ValidationResultCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: str = Field(..., title='Name')
    passed: bool = Field(..., title='Passed')
    validated_entity_id: UUID = Field(..., title='Validated Entity Id')


class ValidationResultRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    passed: bool = Field(..., title='Passed')
    validated_entity_id: UUID = Field(..., title='Validated Entity Id')


class ValidationStatus(
    RootModel[Literal['created', 'initialized', 'running', 'done', 'error']]
):
    root: Literal['created', 'initialized', 'running', 'done', 'error'] = Field(
        ..., title='ValidationStatus'
    )


class HealthHealthGetResponse(BaseModel):
    pass
    model_config = ConfigDict(
        extra='forbid',
    )


VersionVersionGetResponse = HealthHealthGetResponse


class DownloadEntityAssetEntityRouteEntityIdAssetsAssetIdDownloadGetParametersQuery(
    BaseModel
):
    asset_path: str | None = Field(default=None, title='Asset Path')


class ReadManyBrainAtlasGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    species_id__in: str | None = Field(default=None, title='Species Id  In')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    order_by: str | None = Field(default='name', title='Order By')
    species__name: str | None = Field(default=None, title='Species  Name')
    species__name__in: str | None = Field(default=None, title='Species  Name  In')
    species__name__ilike: str | None = Field(default=None, title='Species  Name  Ilike')
    species__id: UUID | None = Field(default=None, title='Species  Id')
    species__order_by: str | None = Field(default='name', title='Species  Order By')
    strain__name: str | None = Field(default=None, title='Strain  Name')
    strain__name__in: str | None = Field(default=None, title='Strain  Name  In')
    strain__name__ilike: str | None = Field(default=None, title='Strain  Name  Ilike')
    strain__id: UUID | None = Field(default=None, title='Strain  Id')
    strain__order_by: str | None = Field(default='name', title='Strain  Order By')


class ReadManyRegionBrainAtlasAtlasIdRegionsGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    order_by: str | None = Field(default='id,creation_date', title='Order By')


class ReadManyBrainRegionGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    id: UUID | None = Field(default=None, title='Id')
    acronym: str | None = Field(default=None, title='Acronym')
    annotation_value: int | None = Field(default=None, title='Annotation Value')
    hierarchy_id: UUID | None = Field(default=None, title='Hierarchy Id')
    order_by: str | None = Field(default='name', title='Order By')


class ReadManyBrainRegionHierarchyGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    order_by: str | None = Field(default='name', title='Order By')


class ReadManyCellCompositionGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    search: str | None = Field(default=None, title='Search')


class ReadManyCircuitGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    experiment_date__lte: datetime | None = Field(
        default=None, title='Experiment Date  Lte'
    )
    experiment_date__gte: datetime | None = Field(
        default=None, title='Experiment Date  Gte'
    )
    contact_id: UUID | None = Field(default=None, title='Contact Id')
    atlas_id: UUID | None = Field(default=None, title='Atlas Id')
    root_circuit_id: UUID | None = Field(default=None, title='Root Circuit Id')
    has_morphologies: bool | None = Field(default=None, title='Has Morphologies')
    has_point_neurons: bool | None = Field(default=None, title='Has Point Neurons')
    has_electrical_cell_models: bool | None = Field(
        default=None, title='Has Electrical Cell Models'
    )
    has_spines: bool | None = Field(default=None, title='Has Spines')
    number_neurons__lte: int | None = Field(default=None, title='Number Neurons  Lte')
    number_neurons__gte: int | None = Field(default=None, title='Number Neurons  Gte')
    number_synapses__lte: int | None = Field(default=None, title='Number Synapses  Lte')
    number_synapses__gte: int | None = Field(default=None, title='Number Synapses  Gte')
    number_connections__lte: int | None = Field(
        default=None, title='Number Connections  Lte'
    )
    number_connections__gte: int | None = Field(
        default=None, title='Number Connections  Gte'
    )
    build_category: str | None = Field(default=None, title='Build Category')
    build_category__in: str | None = Field(default=None, title='Build Category  In')
    scale: str | None = Field(default=None, title='Scale')
    scale__in: str | None = Field(default=None, title='Scale  In')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    brain_region__name: str | None = Field(default=None, title='Brain Region  Name')
    brain_region__name__in: str | None = Field(
        default=None, title='Brain Region  Name  In'
    )
    brain_region__name__ilike: str | None = Field(
        default=None, title='Brain Region  Name  Ilike'
    )
    brain_region__id: UUID | None = Field(default=None, title='Brain Region  Id')
    brain_region__id__in: str | None = Field(default=None, title='Brain Region  Id  In')
    brain_region__acronym: str | None = Field(
        default=None, title='Brain Region  Acronym'
    )
    brain_region__acronym__in: str | None = Field(
        default=None, title='Brain Region  Acronym  In'
    )
    brain_region__order_by: str | None = Field(
        default='name', title='Brain Region  Order By'
    )
    subject__id: UUID | None = Field(default=None, title='Subject  Id')
    subject__id__in: str | None = Field(default=None, title='Subject  Id  In')
    subject__name: str | None = Field(default=None, title='Subject  Name')
    subject__name__in: str | None = Field(default=None, title='Subject  Name  In')
    subject__name__ilike: str | None = Field(default=None, title='Subject  Name  Ilike')
    subject__species_id__in: str | None = Field(
        default=None, title='Subject  Species Id  In'
    )
    subject__order_by: str | None = Field(
        default='-creation_date', title='Subject  Order By'
    )
    subject__species__name: str | None = Field(
        default=None, title='Subject  Species  Name'
    )
    subject__species__name__in: str | None = Field(
        default=None, title='Subject  Species  Name  In'
    )
    subject__species__name__ilike: str | None = Field(
        default=None, title='Subject  Species  Name  Ilike'
    )
    subject__species__id: UUID | None = Field(
        default=None, title='Subject  Species  Id'
    )
    subject__species__order_by: str | None = Field(
        default='name', title='Subject  Species  Order By'
    )
    subject__strain__name: str | None = Field(
        default=None, title='Subject  Strain  Name'
    )
    subject__strain__name__in: str | None = Field(
        default=None, title='Subject  Strain  Name  In'
    )
    subject__strain__name__ilike: str | None = Field(
        default=None, title='Subject  Strain  Name  Ilike'
    )
    subject__strain__id: UUID | None = Field(default=None, title='Subject  Strain  Id')
    subject__strain__order_by: str | None = Field(
        default='name', title='Subject  Strain  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManyContributionGetParametersQuery(BaseModel):
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    agent__id: UUID | None = Field(default=None, title='Agent  Id')
    agent__pref_label: str | None = Field(default=None, title='Agent  Pref Label')
    agent__pref_label__in: str | None = Field(
        default=None, title='Agent  Pref Label  In'
    )
    agent__order_by: str | None = Field(default='pref_label', title='Agent  Order By')
    entity__id: UUID | None = Field(default=None, title='Entity  Id')
    entity__id__in: str | None = Field(default=None, title='Entity  Id  In')
    entity__type: str | None = Field(default=None, title='Entity  Type')
    entity__order_by: str | None = Field(
        default='-creation_date', title='Entity  Order By'
    )
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')


class ReadManyEntityRouteEntityIdDerivedFromGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    type: EntityType | None = Field(default=None, title='Type')
    order_by: str | None = Field(default='-creation_date', title='Order By')


class ReadManyElectricalCellRecordingGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    etype__id: UUID | None = Field(default=None, title='Etype  Id')
    etype__pref_label: str | None = Field(default=None, title='Etype  Pref Label')
    etype__pref_label__in: str | None = Field(
        default=None, title='Etype  Pref Label  In'
    )
    etype__order_by: str | None = Field(default='pref_label', title='Etype  Order By')
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    subject__id: UUID | None = Field(default=None, title='Subject  Id')
    subject__id__in: str | None = Field(default=None, title='Subject  Id  In')
    subject__name: str | None = Field(default=None, title='Subject  Name')
    subject__name__in: str | None = Field(default=None, title='Subject  Name  In')
    subject__name__ilike: str | None = Field(default=None, title='Subject  Name  Ilike')
    subject__species_id__in: str | None = Field(
        default=None, title='Subject  Species Id  In'
    )
    subject__order_by: str | None = Field(
        default='-creation_date', title='Subject  Order By'
    )
    subject__species__name: str | None = Field(
        default=None, title='Subject  Species  Name'
    )
    subject__species__name__in: str | None = Field(
        default=None, title='Subject  Species  Name  In'
    )
    subject__species__name__ilike: str | None = Field(
        default=None, title='Subject  Species  Name  Ilike'
    )
    subject__species__id: UUID | None = Field(
        default=None, title='Subject  Species  Id'
    )
    subject__species__order_by: str | None = Field(
        default='name', title='Subject  Species  Order By'
    )
    subject__strain__name: str | None = Field(
        default=None, title='Subject  Strain  Name'
    )
    subject__strain__name__in: str | None = Field(
        default=None, title='Subject  Strain  Name  In'
    )
    subject__strain__name__ilike: str | None = Field(
        default=None, title='Subject  Strain  Name  Ilike'
    )
    subject__strain__id: UUID | None = Field(default=None, title='Subject  Strain  Id')
    subject__strain__order_by: str | None = Field(
        default='name', title='Subject  Strain  Order By'
    )
    brain_region__name: str | None = Field(default=None, title='Brain Region  Name')
    brain_region__name__in: str | None = Field(
        default=None, title='Brain Region  Name  In'
    )
    brain_region__name__ilike: str | None = Field(
        default=None, title='Brain Region  Name  Ilike'
    )
    brain_region__id: UUID | None = Field(default=None, title='Brain Region  Id')
    brain_region__id__in: str | None = Field(default=None, title='Brain Region  Id  In')
    brain_region__acronym: str | None = Field(
        default=None, title='Brain Region  Acronym'
    )
    brain_region__acronym__in: str | None = Field(
        default=None, title='Brain Region  Acronym  In'
    )
    brain_region__order_by: str | None = Field(
        default='name', title='Brain Region  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManyEmodelGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    species_id__in: str | None = Field(default=None, title='Species Id  In')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    score__lte: float | None = Field(default=None, title='Score  Lte')
    score__gte: float | None = Field(default=None, title='Score  Gte')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    species__name: str | None = Field(default=None, title='Species  Name')
    species__name__in: str | None = Field(default=None, title='Species  Name  In')
    species__name__ilike: str | None = Field(default=None, title='Species  Name  Ilike')
    species__id: UUID | None = Field(default=None, title='Species  Id')
    species__order_by: str | None = Field(default='name', title='Species  Order By')
    strain__name: str | None = Field(default=None, title='Strain  Name')
    strain__name__in: str | None = Field(default=None, title='Strain  Name  In')
    strain__name__ilike: str | None = Field(default=None, title='Strain  Name  Ilike')
    strain__id: UUID | None = Field(default=None, title='Strain  Id')
    strain__order_by: str | None = Field(default='name', title='Strain  Order By')
    etype__id: UUID | None = Field(default=None, title='Etype  Id')
    etype__pref_label: str | None = Field(default=None, title='Etype  Pref Label')
    etype__pref_label__in: str | None = Field(
        default=None, title='Etype  Pref Label  In'
    )
    etype__order_by: str | None = Field(default='pref_label', title='Etype  Order By')
    mtype__id: UUID | None = Field(default=None, title='Mtype  Id')
    mtype__pref_label: str | None = Field(default=None, title='Mtype  Pref Label')
    mtype__pref_label__in: str | None = Field(
        default=None, title='Mtype  Pref Label  In'
    )
    mtype__order_by: str | None = Field(default='pref_label', title='Mtype  Order By')
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    brain_region__name: str | None = Field(default=None, title='Brain Region  Name')
    brain_region__name__in: str | None = Field(
        default=None, title='Brain Region  Name  In'
    )
    brain_region__name__ilike: str | None = Field(
        default=None, title='Brain Region  Name  Ilike'
    )
    brain_region__id: UUID | None = Field(default=None, title='Brain Region  Id')
    brain_region__id__in: str | None = Field(default=None, title='Brain Region  Id  In')
    brain_region__acronym: str | None = Field(
        default=None, title='Brain Region  Acronym'
    )
    brain_region__acronym__in: str | None = Field(
        default=None, title='Brain Region  Acronym  In'
    )
    brain_region__order_by: str | None = Field(
        default='name', title='Brain Region  Order By'
    )
    exemplar_morphology__name: str | None = Field(
        default=None, title='Exemplar Morphology  Name'
    )
    exemplar_morphology__name__in: str | None = Field(
        default=None, title='Exemplar Morphology  Name  In'
    )
    exemplar_morphology__name__ilike: str | None = Field(
        default=None, title='Exemplar Morphology  Name  Ilike'
    )
    exemplar_morphology__creation_date__lte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Creation Date  Lte'
    )
    exemplar_morphology__creation_date__gte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Creation Date  Gte'
    )
    exemplar_morphology__update_date__lte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Update Date  Lte'
    )
    exemplar_morphology__update_date__gte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Update Date  Gte'
    )
    exemplar_morphology__id: UUID | None = Field(
        default=None, title='Exemplar Morphology  Id'
    )
    exemplar_morphology__id__in: str | None = Field(
        default=None, title='Exemplar Morphology  Id  In'
    )
    exemplar_morphology__species_id__in: str | None = Field(
        default=None, title='Exemplar Morphology  Species Id  In'
    )
    exemplar_morphology__order_by: str | None = Field(
        default='-creation_date', title='Exemplar Morphology  Order By'
    )
    measurement_annotation__creation_date__lte: datetime | None = Field(
        default=None, title='Measurement Annotation  Creation Date  Lte'
    )
    measurement_annotation__creation_date__gte: datetime | None = Field(
        default=None, title='Measurement Annotation  Creation Date  Gte'
    )
    measurement_annotation__update_date__lte: datetime | None = Field(
        default=None, title='Measurement Annotation  Update Date  Lte'
    )
    measurement_annotation__update_date__gte: datetime | None = Field(
        default=None, title='Measurement Annotation  Update Date  Gte'
    )
    measurement_kind__pref_label: str | None = Field(
        default=None, title='Measurement Kind  Pref Label'
    )
    measurement_kind__definition: str | None = Field(
        default=None, title='Measurement Kind  Definition'
    )
    measurement_kind__structural_domain: StructuralDomain | None = Field(
        default=None, title='Measurement Kind  Structural Domain'
    )
    measurement_item__name: MeasurementStatistic | None = Field(
        default=None, title='Measurement Item  Name'
    )
    measurement_item__unit: MeasurementUnit | None = Field(
        default=None, title='Measurement Item  Unit'
    )
    measurement_item__value__gte: float | None = Field(
        default=None, title='Measurement Item  Value  Gte'
    )
    measurement_item__value__lte: float | None = Field(
        default=None, title='Measurement Item  Value  Lte'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManyEtypeGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    id: UUID | None = Field(default=None, title='Id')
    pref_label: str | None = Field(default=None, title='Pref Label')
    pref_label__in: str | None = Field(default=None, title='Pref Label  In')
    order_by: str | None = Field(default='pref_label', title='Order By')


class ReadManyExperimentalBoutonDensityGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    mtype__id: UUID | None = Field(default=None, title='Mtype  Id')
    mtype__pref_label: str | None = Field(default=None, title='Mtype  Pref Label')
    mtype__pref_label__in: str | None = Field(
        default=None, title='Mtype  Pref Label  In'
    )
    mtype__order_by: str | None = Field(default='pref_label', title='Mtype  Order By')
    subject__id: UUID | None = Field(default=None, title='Subject  Id')
    subject__id__in: str | None = Field(default=None, title='Subject  Id  In')
    subject__name: str | None = Field(default=None, title='Subject  Name')
    subject__name__in: str | None = Field(default=None, title='Subject  Name  In')
    subject__name__ilike: str | None = Field(default=None, title='Subject  Name  Ilike')
    subject__species_id__in: str | None = Field(
        default=None, title='Subject  Species Id  In'
    )
    subject__order_by: str | None = Field(
        default='-creation_date', title='Subject  Order By'
    )
    subject__species__name: str | None = Field(
        default=None, title='Subject  Species  Name'
    )
    subject__species__name__in: str | None = Field(
        default=None, title='Subject  Species  Name  In'
    )
    subject__species__name__ilike: str | None = Field(
        default=None, title='Subject  Species  Name  Ilike'
    )
    subject__species__id: UUID | None = Field(
        default=None, title='Subject  Species  Id'
    )
    subject__species__order_by: str | None = Field(
        default='name', title='Subject  Species  Order By'
    )
    subject__strain__name: str | None = Field(
        default=None, title='Subject  Strain  Name'
    )
    subject__strain__name__in: str | None = Field(
        default=None, title='Subject  Strain  Name  In'
    )
    subject__strain__name__ilike: str | None = Field(
        default=None, title='Subject  Strain  Name  Ilike'
    )
    subject__strain__id: UUID | None = Field(default=None, title='Subject  Strain  Id')
    subject__strain__order_by: str | None = Field(
        default='name', title='Subject  Strain  Order By'
    )
    brain_region__name: str | None = Field(default=None, title='Brain Region  Name')
    brain_region__name__in: str | None = Field(
        default=None, title='Brain Region  Name  In'
    )
    brain_region__name__ilike: str | None = Field(
        default=None, title='Brain Region  Name  Ilike'
    )
    brain_region__id: UUID | None = Field(default=None, title='Brain Region  Id')
    brain_region__id__in: str | None = Field(default=None, title='Brain Region  Id  In')
    brain_region__acronym: str | None = Field(
        default=None, title='Brain Region  Acronym'
    )
    brain_region__acronym__in: str | None = Field(
        default=None, title='Brain Region  Acronym  In'
    )
    brain_region__order_by: str | None = Field(
        default='name', title='Brain Region  Order By'
    )
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManyExperimentalNeuronDensityGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    etype__id: UUID | None = Field(default=None, title='Etype  Id')
    etype__pref_label: str | None = Field(default=None, title='Etype  Pref Label')
    etype__pref_label__in: str | None = Field(
        default=None, title='Etype  Pref Label  In'
    )
    etype__order_by: str | None = Field(default='pref_label', title='Etype  Order By')
    mtype__id: UUID | None = Field(default=None, title='Mtype  Id')
    mtype__pref_label: str | None = Field(default=None, title='Mtype  Pref Label')
    mtype__pref_label__in: str | None = Field(
        default=None, title='Mtype  Pref Label  In'
    )
    mtype__order_by: str | None = Field(default='pref_label', title='Mtype  Order By')
    subject__id: UUID | None = Field(default=None, title='Subject  Id')
    subject__id__in: str | None = Field(default=None, title='Subject  Id  In')
    subject__name: str | None = Field(default=None, title='Subject  Name')
    subject__name__in: str | None = Field(default=None, title='Subject  Name  In')
    subject__name__ilike: str | None = Field(default=None, title='Subject  Name  Ilike')
    subject__species_id__in: str | None = Field(
        default=None, title='Subject  Species Id  In'
    )
    subject__order_by: str | None = Field(
        default='-creation_date', title='Subject  Order By'
    )
    subject__species__name: str | None = Field(
        default=None, title='Subject  Species  Name'
    )
    subject__species__name__in: str | None = Field(
        default=None, title='Subject  Species  Name  In'
    )
    subject__species__name__ilike: str | None = Field(
        default=None, title='Subject  Species  Name  Ilike'
    )
    subject__species__id: UUID | None = Field(
        default=None, title='Subject  Species  Id'
    )
    subject__species__order_by: str | None = Field(
        default='name', title='Subject  Species  Order By'
    )
    subject__strain__name: str | None = Field(
        default=None, title='Subject  Strain  Name'
    )
    subject__strain__name__in: str | None = Field(
        default=None, title='Subject  Strain  Name  In'
    )
    subject__strain__name__ilike: str | None = Field(
        default=None, title='Subject  Strain  Name  Ilike'
    )
    subject__strain__id: UUID | None = Field(default=None, title='Subject  Strain  Id')
    subject__strain__order_by: str | None = Field(
        default='name', title='Subject  Strain  Order By'
    )
    brain_region__name: str | None = Field(default=None, title='Brain Region  Name')
    brain_region__name__in: str | None = Field(
        default=None, title='Brain Region  Name  In'
    )
    brain_region__name__ilike: str | None = Field(
        default=None, title='Brain Region  Name  Ilike'
    )
    brain_region__id: UUID | None = Field(default=None, title='Brain Region  Id')
    brain_region__id__in: str | None = Field(default=None, title='Brain Region  Id  In')
    brain_region__acronym: str | None = Field(
        default=None, title='Brain Region  Acronym'
    )
    brain_region__acronym__in: str | None = Field(
        default=None, title='Brain Region  Acronym  In'
    )
    brain_region__order_by: str | None = Field(
        default='name', title='Brain Region  Order By'
    )
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManyExperimentalSynapsesPerConnectionGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    subject__id: UUID | None = Field(default=None, title='Subject  Id')
    subject__id__in: str | None = Field(default=None, title='Subject  Id  In')
    subject__name: str | None = Field(default=None, title='Subject  Name')
    subject__name__in: str | None = Field(default=None, title='Subject  Name  In')
    subject__name__ilike: str | None = Field(default=None, title='Subject  Name  Ilike')
    subject__species_id__in: str | None = Field(
        default=None, title='Subject  Species Id  In'
    )
    subject__order_by: str | None = Field(
        default='-creation_date', title='Subject  Order By'
    )
    subject__species__name: str | None = Field(
        default=None, title='Subject  Species  Name'
    )
    subject__species__name__in: str | None = Field(
        default=None, title='Subject  Species  Name  In'
    )
    subject__species__name__ilike: str | None = Field(
        default=None, title='Subject  Species  Name  Ilike'
    )
    subject__species__id: UUID | None = Field(
        default=None, title='Subject  Species  Id'
    )
    subject__species__order_by: str | None = Field(
        default='name', title='Subject  Species  Order By'
    )
    subject__strain__name: str | None = Field(
        default=None, title='Subject  Strain  Name'
    )
    subject__strain__name__in: str | None = Field(
        default=None, title='Subject  Strain  Name  In'
    )
    subject__strain__name__ilike: str | None = Field(
        default=None, title='Subject  Strain  Name  Ilike'
    )
    subject__strain__id: UUID | None = Field(default=None, title='Subject  Strain  Id')
    subject__strain__order_by: str | None = Field(
        default='name', title='Subject  Strain  Order By'
    )
    brain_region__name: str | None = Field(default=None, title='Brain Region  Name')
    brain_region__name__in: str | None = Field(
        default=None, title='Brain Region  Name  In'
    )
    brain_region__name__ilike: str | None = Field(
        default=None, title='Brain Region  Name  Ilike'
    )
    brain_region__id: UUID | None = Field(default=None, title='Brain Region  Id')
    brain_region__id__in: str | None = Field(default=None, title='Brain Region  Id  In')
    brain_region__acronym: str | None = Field(
        default=None, title='Brain Region  Acronym'
    )
    brain_region__acronym__in: str | None = Field(
        default=None, title='Brain Region  Acronym  In'
    )
    brain_region__order_by: str | None = Field(
        default='name', title='Brain Region  Order By'
    )
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    pre_mtype__id: UUID | None = Field(default=None, title='Pre Mtype  Id')
    pre_mtype__pref_label: str | None = Field(
        default=None, title='Pre Mtype  Pref Label'
    )
    pre_mtype__pref_label__in: str | None = Field(
        default=None, title='Pre Mtype  Pref Label  In'
    )
    pre_mtype__order_by: str | None = Field(
        default='pref_label', title='Pre Mtype  Order By'
    )
    post_mtype__id: UUID | None = Field(default=None, title='Post Mtype  Id')
    post_mtype__pref_label: str | None = Field(
        default=None, title='Post Mtype  Pref Label'
    )
    post_mtype__pref_label__in: str | None = Field(
        default=None, title='Post Mtype  Pref Label  In'
    )
    post_mtype__order_by: str | None = Field(
        default='pref_label', title='Post Mtype  Order By'
    )
    pre_region__name: str | None = Field(default=None, title='Pre Region  Name')
    pre_region__name__in: str | None = Field(default=None, title='Pre Region  Name  In')
    pre_region__name__ilike: str | None = Field(
        default=None, title='Pre Region  Name  Ilike'
    )
    pre_region__id: UUID | None = Field(default=None, title='Pre Region  Id')
    pre_region__id__in: str | None = Field(default=None, title='Pre Region  Id  In')
    pre_region__acronym: str | None = Field(default=None, title='Pre Region  Acronym')
    pre_region__acronym__in: str | None = Field(
        default=None, title='Pre Region  Acronym  In'
    )
    pre_region__order_by: str | None = Field(
        default='name', title='Pre Region  Order By'
    )
    post_region__name: str | None = Field(default=None, title='Post Region  Name')
    post_region__name__in: str | None = Field(
        default=None, title='Post Region  Name  In'
    )
    post_region__name__ilike: str | None = Field(
        default=None, title='Post Region  Name  Ilike'
    )
    post_region__id: UUID | None = Field(default=None, title='Post Region  Id')
    post_region__id__in: str | None = Field(default=None, title='Post Region  Id  In')
    post_region__acronym: str | None = Field(default=None, title='Post Region  Acronym')
    post_region__acronym__in: str | None = Field(
        default=None, title='Post Region  Acronym  In'
    )
    post_region__order_by: str | None = Field(
        default='name', title='Post Region  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManyIonChannelModelGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    search: str | None = Field(default=None, title='Search')
    species_id__in: str | None = Field(default=None, title='Species Id  In')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    nmodl_suffix: str | None = Field(default=None, title='Nmodl Suffix')
    is_ljp_corrected: bool | None = Field(default=None, title='Is Ljp Corrected')
    is_temperature_dependent: bool | None = Field(
        default=None, title='Is Temperature Dependent'
    )
    temperature_celsius__lte: int | None = Field(
        default=None, title='Temperature Celsius  Lte'
    )
    temperature_celsius__gte: int | None = Field(
        default=None, title='Temperature Celsius  Gte'
    )
    is_stochastic: bool | None = Field(default=None, title='Is Stochastic')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    species__name: str | None = Field(default=None, title='Species  Name')
    species__name__in: str | None = Field(default=None, title='Species  Name  In')
    species__name__ilike: str | None = Field(default=None, title='Species  Name  Ilike')
    species__id: UUID | None = Field(default=None, title='Species  Id')
    species__order_by: str | None = Field(default='name', title='Species  Order By')
    strain__name: str | None = Field(default=None, title='Strain  Name')
    strain__name__in: str | None = Field(default=None, title='Strain  Name  In')
    strain__name__ilike: str | None = Field(default=None, title='Strain  Name  Ilike')
    strain__id: UUID | None = Field(default=None, title='Strain  Id')
    strain__order_by: str | None = Field(default='name', title='Strain  Order By')
    brain_region__name: str | None = Field(default=None, title='Brain Region  Name')
    brain_region__name__in: str | None = Field(
        default=None, title='Brain Region  Name  In'
    )
    brain_region__name__ilike: str | None = Field(
        default=None, title='Brain Region  Name  Ilike'
    )
    brain_region__id: UUID | None = Field(default=None, title='Brain Region  Id')
    brain_region__id__in: str | None = Field(default=None, title='Brain Region  Id  In')
    brain_region__acronym: str | None = Field(
        default=None, title='Brain Region  Acronym'
    )
    brain_region__acronym__in: str | None = Field(
        default=None, title='Brain Region  Acronym  In'
    )
    brain_region__order_by: str | None = Field(
        default='name', title='Brain Region  Order By'
    )
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )
    with_facets: bool | None = Field(default=False, title='With Facets')


class ReadManyLicenseGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')


class ReadManyMeasurementAnnotationGetParametersQuery(BaseModel):
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id__in: str | None = Field(default=None, title='Id  In')
    entity_id: UUID | None = Field(default=None, title='Entity Id')
    entity_type: MeasurableEntity | None = Field(default=None, title='Entity Type')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    measurement_kind__pref_label: str | None = Field(
        default=None, title='Measurement Kind  Pref Label'
    )
    measurement_kind__definition: str | None = Field(
        default=None, title='Measurement Kind  Definition'
    )
    measurement_kind__structural_domain: StructuralDomain | None = Field(
        default=None, title='Measurement Kind  Structural Domain'
    )
    measurement_item__name: MeasurementStatistic | None = Field(
        default=None, title='Measurement Item  Name'
    )
    measurement_item__unit: MeasurementUnit | None = Field(
        default=None, title='Measurement Item  Unit'
    )
    measurement_item__value__gte: float | None = Field(
        default=None, title='Measurement Item  Value  Gte'
    )
    measurement_item__value__lte: float | None = Field(
        default=None, title='Measurement Item  Value  Lte'
    )
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManyMemodelGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    species_id__in: str | None = Field(default=None, title='Species Id  In')
    validation_status: ValidationStatus | None = Field(
        default=None, title='Validation Status'
    )
    order_by: str | None = Field(default='-creation_date', title='Order By')
    brain_region__name: str | None = Field(default=None, title='Brain Region  Name')
    brain_region__name__in: str | None = Field(
        default=None, title='Brain Region  Name  In'
    )
    brain_region__name__ilike: str | None = Field(
        default=None, title='Brain Region  Name  Ilike'
    )
    brain_region__id: UUID | None = Field(default=None, title='Brain Region  Id')
    brain_region__id__in: str | None = Field(default=None, title='Brain Region  Id  In')
    brain_region__acronym: str | None = Field(
        default=None, title='Brain Region  Acronym'
    )
    brain_region__acronym__in: str | None = Field(
        default=None, title='Brain Region  Acronym  In'
    )
    brain_region__order_by: str | None = Field(
        default='name', title='Brain Region  Order By'
    )
    etype__id: UUID | None = Field(default=None, title='Etype  Id')
    etype__pref_label: str | None = Field(default=None, title='Etype  Pref Label')
    etype__pref_label__in: str | None = Field(
        default=None, title='Etype  Pref Label  In'
    )
    etype__order_by: str | None = Field(default='pref_label', title='Etype  Order By')
    mtype__id: UUID | None = Field(default=None, title='Mtype  Id')
    mtype__pref_label: str | None = Field(default=None, title='Mtype  Pref Label')
    mtype__pref_label__in: str | None = Field(
        default=None, title='Mtype  Pref Label  In'
    )
    mtype__order_by: str | None = Field(default='pref_label', title='Mtype  Order By')
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    species__name: str | None = Field(default=None, title='Species  Name')
    species__name__in: str | None = Field(default=None, title='Species  Name  In')
    species__name__ilike: str | None = Field(default=None, title='Species  Name  Ilike')
    species__id: UUID | None = Field(default=None, title='Species  Id')
    species__order_by: str | None = Field(default='name', title='Species  Order By')
    strain__name: str | None = Field(default=None, title='Strain  Name')
    strain__name__in: str | None = Field(default=None, title='Strain  Name  In')
    strain__name__ilike: str | None = Field(default=None, title='Strain  Name  Ilike')
    strain__id: UUID | None = Field(default=None, title='Strain  Id')
    strain__order_by: str | None = Field(default='name', title='Strain  Order By')
    morphology__name: str | None = Field(default=None, title='Morphology  Name')
    morphology__name__in: str | None = Field(default=None, title='Morphology  Name  In')
    morphology__name__ilike: str | None = Field(
        default=None, title='Morphology  Name  Ilike'
    )
    morphology__creation_date__lte: datetime | None = Field(
        default=None, title='Morphology  Creation Date  Lte'
    )
    morphology__creation_date__gte: datetime | None = Field(
        default=None, title='Morphology  Creation Date  Gte'
    )
    morphology__update_date__lte: datetime | None = Field(
        default=None, title='Morphology  Update Date  Lte'
    )
    morphology__update_date__gte: datetime | None = Field(
        default=None, title='Morphology  Update Date  Gte'
    )
    morphology__id: UUID | None = Field(default=None, title='Morphology  Id')
    morphology__id__in: str | None = Field(default=None, title='Morphology  Id  In')
    morphology__species_id__in: str | None = Field(
        default=None, title='Morphology  Species Id  In'
    )
    morphology__order_by: str | None = Field(
        default='-creation_date', title='Morphology  Order By'
    )
    measurement_annotation__creation_date__lte: datetime | None = Field(
        default=None, title='Measurement Annotation  Creation Date  Lte'
    )
    measurement_annotation__creation_date__gte: datetime | None = Field(
        default=None, title='Measurement Annotation  Creation Date  Gte'
    )
    measurement_annotation__update_date__lte: datetime | None = Field(
        default=None, title='Measurement Annotation  Update Date  Lte'
    )
    measurement_annotation__update_date__gte: datetime | None = Field(
        default=None, title='Measurement Annotation  Update Date  Gte'
    )
    measurement_kind__pref_label: str | None = Field(
        default=None, title='Measurement Kind  Pref Label'
    )
    measurement_kind__definition: str | None = Field(
        default=None, title='Measurement Kind  Definition'
    )
    measurement_kind__structural_domain: StructuralDomain | None = Field(
        default=None, title='Measurement Kind  Structural Domain'
    )
    measurement_item__name: MeasurementStatistic | None = Field(
        default=None, title='Measurement Item  Name'
    )
    measurement_item__unit: MeasurementUnit | None = Field(
        default=None, title='Measurement Item  Unit'
    )
    measurement_item__value__gte: float | None = Field(
        default=None, title='Measurement Item  Value  Gte'
    )
    measurement_item__value__lte: float | None = Field(
        default=None, title='Measurement Item  Value  Lte'
    )
    emodel__name: str | None = Field(default=None, title='Emodel  Name')
    emodel__name__in: str | None = Field(default=None, title='Emodel  Name  In')
    emodel__name__ilike: str | None = Field(default=None, title='Emodel  Name  Ilike')
    emodel__species_id__in: str | None = Field(
        default=None, title='Emodel  Species Id  In'
    )
    emodel__creation_date__lte: datetime | None = Field(
        default=None, title='Emodel  Creation Date  Lte'
    )
    emodel__creation_date__gte: datetime | None = Field(
        default=None, title='Emodel  Creation Date  Gte'
    )
    emodel__update_date__lte: datetime | None = Field(
        default=None, title='Emodel  Update Date  Lte'
    )
    emodel__update_date__gte: datetime | None = Field(
        default=None, title='Emodel  Update Date  Gte'
    )
    emodel__id: UUID | None = Field(default=None, title='Emodel  Id')
    emodel__id__in: str | None = Field(default=None, title='Emodel  Id  In')
    emodel__score__lte: float | None = Field(default=None, title='Emodel  Score  Lte')
    emodel__score__gte: float | None = Field(default=None, title='Emodel  Score  Gte')
    emodel__order_by: str | None = Field(
        default='-creation_date', title='Emodel  Order By'
    )
    exemplar_morphology__name: str | None = Field(
        default=None, title='Exemplar Morphology  Name'
    )
    exemplar_morphology__name__in: str | None = Field(
        default=None, title='Exemplar Morphology  Name  In'
    )
    exemplar_morphology__name__ilike: str | None = Field(
        default=None, title='Exemplar Morphology  Name  Ilike'
    )
    exemplar_morphology__creation_date__lte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Creation Date  Lte'
    )
    exemplar_morphology__creation_date__gte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Creation Date  Gte'
    )
    exemplar_morphology__update_date__lte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Update Date  Lte'
    )
    exemplar_morphology__update_date__gte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Update Date  Gte'
    )
    exemplar_morphology__id: UUID | None = Field(
        default=None, title='Exemplar Morphology  Id'
    )
    exemplar_morphology__id__in: str | None = Field(
        default=None, title='Exemplar Morphology  Id  In'
    )
    exemplar_morphology__species_id__in: str | None = Field(
        default=None, title='Exemplar Morphology  Species Id  In'
    )
    exemplar_morphology__order_by: str | None = Field(
        default='-creation_date', title='Exemplar Morphology  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManyMemodelCalibrationResultGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    passed: bool | None = Field(default=None, title='Passed')
    calibrated_entity_id: UUID | None = Field(
        default=None, title='Calibrated Entity Id'
    )
    order_by: str | None = Field(default='calibrated_entity_id', title='Order By')
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManyReconstructionMorphologyGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    species_id__in: str | None = Field(default=None, title='Species Id  In')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    measurement_annotation__creation_date__lte: datetime | None = Field(
        default=None, title='Measurement Annotation  Creation Date  Lte'
    )
    measurement_annotation__creation_date__gte: datetime | None = Field(
        default=None, title='Measurement Annotation  Creation Date  Gte'
    )
    measurement_annotation__update_date__lte: datetime | None = Field(
        default=None, title='Measurement Annotation  Update Date  Lte'
    )
    measurement_annotation__update_date__gte: datetime | None = Field(
        default=None, title='Measurement Annotation  Update Date  Gte'
    )
    measurement_kind__pref_label: str | None = Field(
        default=None, title='Measurement Kind  Pref Label'
    )
    measurement_kind__definition: str | None = Field(
        default=None, title='Measurement Kind  Definition'
    )
    measurement_kind__structural_domain: StructuralDomain | None = Field(
        default=None, title='Measurement Kind  Structural Domain'
    )
    measurement_item__name: MeasurementStatistic | None = Field(
        default=None, title='Measurement Item  Name'
    )
    measurement_item__unit: MeasurementUnit | None = Field(
        default=None, title='Measurement Item  Unit'
    )
    measurement_item__value__gte: float | None = Field(
        default=None, title='Measurement Item  Value  Gte'
    )
    measurement_item__value__lte: float | None = Field(
        default=None, title='Measurement Item  Value  Lte'
    )
    mtype__id: UUID | None = Field(default=None, title='Mtype  Id')
    mtype__pref_label: str | None = Field(default=None, title='Mtype  Pref Label')
    mtype__pref_label__in: str | None = Field(
        default=None, title='Mtype  Pref Label  In'
    )
    mtype__order_by: str | None = Field(default='pref_label', title='Mtype  Order By')
    species__name: str | None = Field(default=None, title='Species  Name')
    species__name__in: str | None = Field(default=None, title='Species  Name  In')
    species__name__ilike: str | None = Field(default=None, title='Species  Name  Ilike')
    species__id: UUID | None = Field(default=None, title='Species  Id')
    species__order_by: str | None = Field(default='name', title='Species  Order By')
    strain__name: str | None = Field(default=None, title='Strain  Name')
    strain__name__in: str | None = Field(default=None, title='Strain  Name  In')
    strain__name__ilike: str | None = Field(default=None, title='Strain  Name  Ilike')
    strain__id: UUID | None = Field(default=None, title='Strain  Id')
    strain__order_by: str | None = Field(default='name', title='Strain  Order By')
    brain_region__name: str | None = Field(default=None, title='Brain Region  Name')
    brain_region__name__in: str | None = Field(
        default=None, title='Brain Region  Name  In'
    )
    brain_region__name__ilike: str | None = Field(
        default=None, title='Brain Region  Name  Ilike'
    )
    brain_region__id: UUID | None = Field(default=None, title='Brain Region  Id')
    brain_region__id__in: str | None = Field(default=None, title='Brain Region  Id  In')
    brain_region__acronym: str | None = Field(
        default=None, title='Brain Region  Acronym'
    )
    brain_region__acronym__in: str | None = Field(
        default=None, title='Brain Region  Acronym  In'
    )
    brain_region__order_by: str | None = Field(
        default='name', title='Brain Region  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class Expand(RootModel[list[str]]):
    root: list[str] = Field(..., title='Expand')


class ReadOneReconstructionMorphologyIdGetParametersQuery(BaseModel):
    expand: Expand | None = Field(default=None, title='Expand')


ReadManyMtypeGetParametersQuery = ReadManyEtypeGetParametersQuery


ReadManyOrganizationGetParametersQuery = ReadManyLicenseGetParametersQuery


class ReadManyPersonGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    id: UUID | None = Field(default=None, title='Id')
    pref_label: str | None = Field(default=None, title='Pref Label')
    pref_label__in: str | None = Field(default=None, title='Pref Label  In')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    given_name: str | None = Field(default=None, title='Given Name')
    given_name__ilike: str | None = Field(default=None, title='Given Name  Ilike')
    family_name: str | None = Field(default=None, title='Family Name')
    family_name__ilike: str | None = Field(default=None, title='Family Name  Ilike')
    sub_id: UUID | None = Field(default=None, title='Sub Id')
    sub_id__in: str | None = Field(default=None, title='Sub Id  In')
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )


ReadManyRoleGetParametersQuery = ReadManyLicenseGetParametersQuery


class ReadManySimulationGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    entity_id: UUID | None = Field(default=None, title='Entity Id')
    entity_id__in: str | None = Field(default=None, title='Entity Id  In')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    simulation_campaign_id: UUID | None = Field(
        default=None, title='Simulation Campaign Id'
    )
    simulation_campaign_id__in: str | None = Field(
        default=None, title='Simulation Campaign Id  In'
    )
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManySimulationCampaignGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    simulation__name: str | None = Field(default=None, title='Simulation  Name')
    simulation__name__in: str | None = Field(default=None, title='Simulation  Name  In')
    simulation__name__ilike: str | None = Field(
        default=None, title='Simulation  Name  Ilike'
    )
    simulation__id: UUID | None = Field(default=None, title='Simulation  Id')
    simulation__id__in: str | None = Field(default=None, title='Simulation  Id  In')
    simulation__entity_id: UUID | None = Field(
        default=None, title='Simulation  Entity Id'
    )
    simulation__entity_id__in: str | None = Field(
        default=None, title='Simulation  Entity Id  In'
    )
    simulation__order_by: str | None = Field(
        default='-creation_date', title='Simulation  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManySimulationExecutionGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    start_time: datetime | None = Field(default=None, title='Start Time')
    end_time: datetime | None = Field(default=None, title='End Time')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    status: str | None = Field(default=None, title='Status')
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    used__id: UUID | None = Field(default=None, title='Used  Id')
    used__id__in: str | None = Field(default=None, title='Used  Id  In')
    used__type: str | None = Field(default=None, title='Used  Type')
    used__order_by: str | None = Field(default='-creation_date', title='Used  Order By')
    generated__id: UUID | None = Field(default=None, title='Generated  Id')
    generated__id__in: str | None = Field(default=None, title='Generated  Id  In')
    generated__type: str | None = Field(default=None, title='Generated  Type')
    generated__order_by: str | None = Field(
        default='-creation_date', title='Generated  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManySimulationGenerationGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    start_time: datetime | None = Field(default=None, title='Start Time')
    end_time: datetime | None = Field(default=None, title='End Time')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    used__id: UUID | None = Field(default=None, title='Used  Id')
    used__id__in: str | None = Field(default=None, title='Used  Id  In')
    used__type: str | None = Field(default=None, title='Used  Type')
    used__order_by: str | None = Field(default='-creation_date', title='Used  Order By')
    generated__id: UUID | None = Field(default=None, title='Generated  Id')
    generated__id__in: str | None = Field(default=None, title='Generated  Id  In')
    generated__type: str | None = Field(default=None, title='Generated  Type')
    generated__order_by: str | None = Field(
        default='-creation_date', title='Generated  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManySimulationResultGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class ReadManySingleNeuronSimulationGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    status: SingleNeuronSimulationStatus | None = Field(default=None, title='Status')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    brain_region__name: str | None = Field(default=None, title='Brain Region  Name')
    brain_region__name__in: str | None = Field(
        default=None, title='Brain Region  Name  In'
    )
    brain_region__name__ilike: str | None = Field(
        default=None, title='Brain Region  Name  Ilike'
    )
    brain_region__id: UUID | None = Field(default=None, title='Brain Region  Id')
    brain_region__id__in: str | None = Field(default=None, title='Brain Region  Id  In')
    brain_region__acronym: str | None = Field(
        default=None, title='Brain Region  Acronym'
    )
    brain_region__acronym__in: str | None = Field(
        default=None, title='Brain Region  Acronym  In'
    )
    brain_region__order_by: str | None = Field(
        default='name', title='Brain Region  Order By'
    )
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    me_model__name: str | None = Field(default=None, title='Me Model  Name')
    me_model__name__in: str | None = Field(default=None, title='Me Model  Name  In')
    me_model__name__ilike: str | None = Field(
        default=None, title='Me Model  Name  Ilike'
    )
    me_model__creation_date__lte: datetime | None = Field(
        default=None, title='Me Model  Creation Date  Lte'
    )
    me_model__creation_date__gte: datetime | None = Field(
        default=None, title='Me Model  Creation Date  Gte'
    )
    me_model__update_date__lte: datetime | None = Field(
        default=None, title='Me Model  Update Date  Lte'
    )
    me_model__update_date__gte: datetime | None = Field(
        default=None, title='Me Model  Update Date  Gte'
    )
    me_model__id: UUID | None = Field(default=None, title='Me Model  Id')
    me_model__id__in: str | None = Field(default=None, title='Me Model  Id  In')
    me_model__species_id__in: str | None = Field(
        default=None, title='Me Model  Species Id  In'
    )
    me_model__validation_status: ValidationStatus | None = Field(
        default=None, title='Me Model  Validation Status'
    )
    me_model__order_by: str | None = Field(
        default='-creation_date', title='Me Model  Order By'
    )
    etype__id: UUID | None = Field(default=None, title='Etype  Id')
    etype__pref_label: str | None = Field(default=None, title='Etype  Pref Label')
    etype__pref_label__in: str | None = Field(
        default=None, title='Etype  Pref Label  In'
    )
    etype__order_by: str | None = Field(default='pref_label', title='Etype  Order By')
    mtype__id: UUID | None = Field(default=None, title='Mtype  Id')
    mtype__pref_label: str | None = Field(default=None, title='Mtype  Pref Label')
    mtype__pref_label__in: str | None = Field(
        default=None, title='Mtype  Pref Label  In'
    )
    mtype__order_by: str | None = Field(default='pref_label', title='Mtype  Order By')
    species__name: str | None = Field(default=None, title='Species  Name')
    species__name__in: str | None = Field(default=None, title='Species  Name  In')
    species__name__ilike: str | None = Field(default=None, title='Species  Name  Ilike')
    species__id: UUID | None = Field(default=None, title='Species  Id')
    species__order_by: str | None = Field(default='name', title='Species  Order By')
    strain__name: str | None = Field(default=None, title='Strain  Name')
    strain__name__in: str | None = Field(default=None, title='Strain  Name  In')
    strain__name__ilike: str | None = Field(default=None, title='Strain  Name  Ilike')
    strain__id: UUID | None = Field(default=None, title='Strain  Id')
    strain__order_by: str | None = Field(default='name', title='Strain  Order By')
    morphology__name: str | None = Field(default=None, title='Morphology  Name')
    morphology__name__in: str | None = Field(default=None, title='Morphology  Name  In')
    morphology__name__ilike: str | None = Field(
        default=None, title='Morphology  Name  Ilike'
    )
    morphology__creation_date__lte: datetime | None = Field(
        default=None, title='Morphology  Creation Date  Lte'
    )
    morphology__creation_date__gte: datetime | None = Field(
        default=None, title='Morphology  Creation Date  Gte'
    )
    morphology__update_date__lte: datetime | None = Field(
        default=None, title='Morphology  Update Date  Lte'
    )
    morphology__update_date__gte: datetime | None = Field(
        default=None, title='Morphology  Update Date  Gte'
    )
    morphology__id: UUID | None = Field(default=None, title='Morphology  Id')
    morphology__id__in: str | None = Field(default=None, title='Morphology  Id  In')
    morphology__species_id__in: str | None = Field(
        default=None, title='Morphology  Species Id  In'
    )
    morphology__order_by: str | None = Field(
        default='-creation_date', title='Morphology  Order By'
    )
    measurement_annotation__creation_date__lte: datetime | None = Field(
        default=None, title='Measurement Annotation  Creation Date  Lte'
    )
    measurement_annotation__creation_date__gte: datetime | None = Field(
        default=None, title='Measurement Annotation  Creation Date  Gte'
    )
    measurement_annotation__update_date__lte: datetime | None = Field(
        default=None, title='Measurement Annotation  Update Date  Lte'
    )
    measurement_annotation__update_date__gte: datetime | None = Field(
        default=None, title='Measurement Annotation  Update Date  Gte'
    )
    measurement_kind__pref_label: str | None = Field(
        default=None, title='Measurement Kind  Pref Label'
    )
    measurement_kind__definition: str | None = Field(
        default=None, title='Measurement Kind  Definition'
    )
    measurement_kind__structural_domain: StructuralDomain | None = Field(
        default=None, title='Measurement Kind  Structural Domain'
    )
    measurement_item__name: MeasurementStatistic | None = Field(
        default=None, title='Measurement Item  Name'
    )
    measurement_item__unit: MeasurementUnit | None = Field(
        default=None, title='Measurement Item  Unit'
    )
    measurement_item__value__gte: float | None = Field(
        default=None, title='Measurement Item  Value  Gte'
    )
    measurement_item__value__lte: float | None = Field(
        default=None, title='Measurement Item  Value  Lte'
    )
    emodel__name: str | None = Field(default=None, title='Emodel  Name')
    emodel__name__in: str | None = Field(default=None, title='Emodel  Name  In')
    emodel__name__ilike: str | None = Field(default=None, title='Emodel  Name  Ilike')
    emodel__species_id__in: str | None = Field(
        default=None, title='Emodel  Species Id  In'
    )
    emodel__creation_date__lte: datetime | None = Field(
        default=None, title='Emodel  Creation Date  Lte'
    )
    emodel__creation_date__gte: datetime | None = Field(
        default=None, title='Emodel  Creation Date  Gte'
    )
    emodel__update_date__lte: datetime | None = Field(
        default=None, title='Emodel  Update Date  Lte'
    )
    emodel__update_date__gte: datetime | None = Field(
        default=None, title='Emodel  Update Date  Gte'
    )
    emodel__id: UUID | None = Field(default=None, title='Emodel  Id')
    emodel__id__in: str | None = Field(default=None, title='Emodel  Id  In')
    emodel__score__lte: float | None = Field(default=None, title='Emodel  Score  Lte')
    emodel__score__gte: float | None = Field(default=None, title='Emodel  Score  Gte')
    emodel__order_by: str | None = Field(
        default='-creation_date', title='Emodel  Order By'
    )
    exemplar_morphology__name: str | None = Field(
        default=None, title='Exemplar Morphology  Name'
    )
    exemplar_morphology__name__in: str | None = Field(
        default=None, title='Exemplar Morphology  Name  In'
    )
    exemplar_morphology__name__ilike: str | None = Field(
        default=None, title='Exemplar Morphology  Name  Ilike'
    )
    exemplar_morphology__creation_date__lte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Creation Date  Lte'
    )
    exemplar_morphology__creation_date__gte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Creation Date  Gte'
    )
    exemplar_morphology__update_date__lte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Update Date  Lte'
    )
    exemplar_morphology__update_date__gte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Update Date  Gte'
    )
    exemplar_morphology__id: UUID | None = Field(
        default=None, title='Exemplar Morphology  Id'
    )
    exemplar_morphology__id__in: str | None = Field(
        default=None, title='Exemplar Morphology  Id  In'
    )
    exemplar_morphology__species_id__in: str | None = Field(
        default=None, title='Exemplar Morphology  Species Id  In'
    )
    exemplar_morphology__order_by: str | None = Field(
        default='-creation_date', title='Exemplar Morphology  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )
    with_facets: bool | None = Field(default=False, title='With Facets')


class ReadManySingleNeuronSynaptomeGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    brain_region__name: str | None = Field(default=None, title='Brain Region  Name')
    brain_region__name__in: str | None = Field(
        default=None, title='Brain Region  Name  In'
    )
    brain_region__name__ilike: str | None = Field(
        default=None, title='Brain Region  Name  Ilike'
    )
    brain_region__id: UUID | None = Field(default=None, title='Brain Region  Id')
    brain_region__id__in: str | None = Field(default=None, title='Brain Region  Id  In')
    brain_region__acronym: str | None = Field(
        default=None, title='Brain Region  Acronym'
    )
    brain_region__acronym__in: str | None = Field(
        default=None, title='Brain Region  Acronym  In'
    )
    brain_region__order_by: str | None = Field(
        default='name', title='Brain Region  Order By'
    )
    me_model__name: str | None = Field(default=None, title='Me Model  Name')
    me_model__name__in: str | None = Field(default=None, title='Me Model  Name  In')
    me_model__name__ilike: str | None = Field(
        default=None, title='Me Model  Name  Ilike'
    )
    me_model__creation_date__lte: datetime | None = Field(
        default=None, title='Me Model  Creation Date  Lte'
    )
    me_model__creation_date__gte: datetime | None = Field(
        default=None, title='Me Model  Creation Date  Gte'
    )
    me_model__update_date__lte: datetime | None = Field(
        default=None, title='Me Model  Update Date  Lte'
    )
    me_model__update_date__gte: datetime | None = Field(
        default=None, title='Me Model  Update Date  Gte'
    )
    me_model__id: UUID | None = Field(default=None, title='Me Model  Id')
    me_model__id__in: str | None = Field(default=None, title='Me Model  Id  In')
    me_model__species_id__in: str | None = Field(
        default=None, title='Me Model  Species Id  In'
    )
    me_model__validation_status: ValidationStatus | None = Field(
        default=None, title='Me Model  Validation Status'
    )
    me_model__order_by: str | None = Field(
        default='-creation_date', title='Me Model  Order By'
    )
    etype__id: UUID | None = Field(default=None, title='Etype  Id')
    etype__pref_label: str | None = Field(default=None, title='Etype  Pref Label')
    etype__pref_label__in: str | None = Field(
        default=None, title='Etype  Pref Label  In'
    )
    etype__order_by: str | None = Field(default='pref_label', title='Etype  Order By')
    mtype__id: UUID | None = Field(default=None, title='Mtype  Id')
    mtype__pref_label: str | None = Field(default=None, title='Mtype  Pref Label')
    mtype__pref_label__in: str | None = Field(
        default=None, title='Mtype  Pref Label  In'
    )
    mtype__order_by: str | None = Field(default='pref_label', title='Mtype  Order By')
    species__name: str | None = Field(default=None, title='Species  Name')
    species__name__in: str | None = Field(default=None, title='Species  Name  In')
    species__name__ilike: str | None = Field(default=None, title='Species  Name  Ilike')
    species__id: UUID | None = Field(default=None, title='Species  Id')
    species__order_by: str | None = Field(default='name', title='Species  Order By')
    strain__name: str | None = Field(default=None, title='Strain  Name')
    strain__name__in: str | None = Field(default=None, title='Strain  Name  In')
    strain__name__ilike: str | None = Field(default=None, title='Strain  Name  Ilike')
    strain__id: UUID | None = Field(default=None, title='Strain  Id')
    strain__order_by: str | None = Field(default='name', title='Strain  Order By')
    morphology__name: str | None = Field(default=None, title='Morphology  Name')
    morphology__name__in: str | None = Field(default=None, title='Morphology  Name  In')
    morphology__name__ilike: str | None = Field(
        default=None, title='Morphology  Name  Ilike'
    )
    morphology__creation_date__lte: datetime | None = Field(
        default=None, title='Morphology  Creation Date  Lte'
    )
    morphology__creation_date__gte: datetime | None = Field(
        default=None, title='Morphology  Creation Date  Gte'
    )
    morphology__update_date__lte: datetime | None = Field(
        default=None, title='Morphology  Update Date  Lte'
    )
    morphology__update_date__gte: datetime | None = Field(
        default=None, title='Morphology  Update Date  Gte'
    )
    morphology__id: UUID | None = Field(default=None, title='Morphology  Id')
    morphology__id__in: str | None = Field(default=None, title='Morphology  Id  In')
    morphology__species_id__in: str | None = Field(
        default=None, title='Morphology  Species Id  In'
    )
    morphology__order_by: str | None = Field(
        default='-creation_date', title='Morphology  Order By'
    )
    measurement_annotation__creation_date__lte: datetime | None = Field(
        default=None, title='Measurement Annotation  Creation Date  Lte'
    )
    measurement_annotation__creation_date__gte: datetime | None = Field(
        default=None, title='Measurement Annotation  Creation Date  Gte'
    )
    measurement_annotation__update_date__lte: datetime | None = Field(
        default=None, title='Measurement Annotation  Update Date  Lte'
    )
    measurement_annotation__update_date__gte: datetime | None = Field(
        default=None, title='Measurement Annotation  Update Date  Gte'
    )
    measurement_kind__pref_label: str | None = Field(
        default=None, title='Measurement Kind  Pref Label'
    )
    measurement_kind__definition: str | None = Field(
        default=None, title='Measurement Kind  Definition'
    )
    measurement_kind__structural_domain: StructuralDomain | None = Field(
        default=None, title='Measurement Kind  Structural Domain'
    )
    measurement_item__name: MeasurementStatistic | None = Field(
        default=None, title='Measurement Item  Name'
    )
    measurement_item__unit: MeasurementUnit | None = Field(
        default=None, title='Measurement Item  Unit'
    )
    measurement_item__value__gte: float | None = Field(
        default=None, title='Measurement Item  Value  Gte'
    )
    measurement_item__value__lte: float | None = Field(
        default=None, title='Measurement Item  Value  Lte'
    )
    emodel__name: str | None = Field(default=None, title='Emodel  Name')
    emodel__name__in: str | None = Field(default=None, title='Emodel  Name  In')
    emodel__name__ilike: str | None = Field(default=None, title='Emodel  Name  Ilike')
    emodel__species_id__in: str | None = Field(
        default=None, title='Emodel  Species Id  In'
    )
    emodel__creation_date__lte: datetime | None = Field(
        default=None, title='Emodel  Creation Date  Lte'
    )
    emodel__creation_date__gte: datetime | None = Field(
        default=None, title='Emodel  Creation Date  Gte'
    )
    emodel__update_date__lte: datetime | None = Field(
        default=None, title='Emodel  Update Date  Lte'
    )
    emodel__update_date__gte: datetime | None = Field(
        default=None, title='Emodel  Update Date  Gte'
    )
    emodel__id: UUID | None = Field(default=None, title='Emodel  Id')
    emodel__id__in: str | None = Field(default=None, title='Emodel  Id  In')
    emodel__score__lte: float | None = Field(default=None, title='Emodel  Score  Lte')
    emodel__score__gte: float | None = Field(default=None, title='Emodel  Score  Gte')
    emodel__order_by: str | None = Field(
        default='-creation_date', title='Emodel  Order By'
    )
    exemplar_morphology__name: str | None = Field(
        default=None, title='Exemplar Morphology  Name'
    )
    exemplar_morphology__name__in: str | None = Field(
        default=None, title='Exemplar Morphology  Name  In'
    )
    exemplar_morphology__name__ilike: str | None = Field(
        default=None, title='Exemplar Morphology  Name  Ilike'
    )
    exemplar_morphology__creation_date__lte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Creation Date  Lte'
    )
    exemplar_morphology__creation_date__gte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Creation Date  Gte'
    )
    exemplar_morphology__update_date__lte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Update Date  Lte'
    )
    exemplar_morphology__update_date__gte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Update Date  Gte'
    )
    exemplar_morphology__id: UUID | None = Field(
        default=None, title='Exemplar Morphology  Id'
    )
    exemplar_morphology__id__in: str | None = Field(
        default=None, title='Exemplar Morphology  Id  In'
    )
    exemplar_morphology__species_id__in: str | None = Field(
        default=None, title='Exemplar Morphology  Species Id  In'
    )
    exemplar_morphology__order_by: str | None = Field(
        default='-creation_date', title='Exemplar Morphology  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )
    with_facets: bool | None = Field(default=False, title='With Facets')


class ReadManySingleNeuronSynaptomeSimulationGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    status: SingleNeuronSimulationStatus | None = Field(default=None, title='Status')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    brain_region__name: str | None = Field(default=None, title='Brain Region  Name')
    brain_region__name__in: str | None = Field(
        default=None, title='Brain Region  Name  In'
    )
    brain_region__name__ilike: str | None = Field(
        default=None, title='Brain Region  Name  Ilike'
    )
    brain_region__id: UUID | None = Field(default=None, title='Brain Region  Id')
    brain_region__id__in: str | None = Field(default=None, title='Brain Region  Id  In')
    brain_region__acronym: str | None = Field(
        default=None, title='Brain Region  Acronym'
    )
    brain_region__acronym__in: str | None = Field(
        default=None, title='Brain Region  Acronym  In'
    )
    brain_region__order_by: str | None = Field(
        default='name', title='Brain Region  Order By'
    )
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    synaptome__name: str | None = Field(default=None, title='Synaptome  Name')
    synaptome__name__in: str | None = Field(default=None, title='Synaptome  Name  In')
    synaptome__name__ilike: str | None = Field(
        default=None, title='Synaptome  Name  Ilike'
    )
    synaptome__creation_date__lte: datetime | None = Field(
        default=None, title='Synaptome  Creation Date  Lte'
    )
    synaptome__creation_date__gte: datetime | None = Field(
        default=None, title='Synaptome  Creation Date  Gte'
    )
    synaptome__update_date__lte: datetime | None = Field(
        default=None, title='Synaptome  Update Date  Lte'
    )
    synaptome__update_date__gte: datetime | None = Field(
        default=None, title='Synaptome  Update Date  Gte'
    )
    synaptome__id: UUID | None = Field(default=None, title='Synaptome  Id')
    synaptome__id__in: str | None = Field(default=None, title='Synaptome  Id  In')
    synaptome__order_by: str | None = Field(
        default='-creation_date', title='Synaptome  Order By'
    )
    me_model__name: str | None = Field(default=None, title='Me Model  Name')
    me_model__name__in: str | None = Field(default=None, title='Me Model  Name  In')
    me_model__name__ilike: str | None = Field(
        default=None, title='Me Model  Name  Ilike'
    )
    me_model__creation_date__lte: datetime | None = Field(
        default=None, title='Me Model  Creation Date  Lte'
    )
    me_model__creation_date__gte: datetime | None = Field(
        default=None, title='Me Model  Creation Date  Gte'
    )
    me_model__update_date__lte: datetime | None = Field(
        default=None, title='Me Model  Update Date  Lte'
    )
    me_model__update_date__gte: datetime | None = Field(
        default=None, title='Me Model  Update Date  Gte'
    )
    me_model__id: UUID | None = Field(default=None, title='Me Model  Id')
    me_model__id__in: str | None = Field(default=None, title='Me Model  Id  In')
    me_model__species_id__in: str | None = Field(
        default=None, title='Me Model  Species Id  In'
    )
    me_model__validation_status: ValidationStatus | None = Field(
        default=None, title='Me Model  Validation Status'
    )
    me_model__order_by: str | None = Field(
        default='-creation_date', title='Me Model  Order By'
    )
    etype__id: UUID | None = Field(default=None, title='Etype  Id')
    etype__pref_label: str | None = Field(default=None, title='Etype  Pref Label')
    etype__pref_label__in: str | None = Field(
        default=None, title='Etype  Pref Label  In'
    )
    etype__order_by: str | None = Field(default='pref_label', title='Etype  Order By')
    mtype__id: UUID | None = Field(default=None, title='Mtype  Id')
    mtype__pref_label: str | None = Field(default=None, title='Mtype  Pref Label')
    mtype__pref_label__in: str | None = Field(
        default=None, title='Mtype  Pref Label  In'
    )
    mtype__order_by: str | None = Field(default='pref_label', title='Mtype  Order By')
    species__name: str | None = Field(default=None, title='Species  Name')
    species__name__in: str | None = Field(default=None, title='Species  Name  In')
    species__name__ilike: str | None = Field(default=None, title='Species  Name  Ilike')
    species__id: UUID | None = Field(default=None, title='Species  Id')
    species__order_by: str | None = Field(default='name', title='Species  Order By')
    strain__name: str | None = Field(default=None, title='Strain  Name')
    strain__name__in: str | None = Field(default=None, title='Strain  Name  In')
    strain__name__ilike: str | None = Field(default=None, title='Strain  Name  Ilike')
    strain__id: UUID | None = Field(default=None, title='Strain  Id')
    strain__order_by: str | None = Field(default='name', title='Strain  Order By')
    morphology__name: str | None = Field(default=None, title='Morphology  Name')
    morphology__name__in: str | None = Field(default=None, title='Morphology  Name  In')
    morphology__name__ilike: str | None = Field(
        default=None, title='Morphology  Name  Ilike'
    )
    morphology__creation_date__lte: datetime | None = Field(
        default=None, title='Morphology  Creation Date  Lte'
    )
    morphology__creation_date__gte: datetime | None = Field(
        default=None, title='Morphology  Creation Date  Gte'
    )
    morphology__update_date__lte: datetime | None = Field(
        default=None, title='Morphology  Update Date  Lte'
    )
    morphology__update_date__gte: datetime | None = Field(
        default=None, title='Morphology  Update Date  Gte'
    )
    morphology__id: UUID | None = Field(default=None, title='Morphology  Id')
    morphology__id__in: str | None = Field(default=None, title='Morphology  Id  In')
    morphology__species_id__in: str | None = Field(
        default=None, title='Morphology  Species Id  In'
    )
    morphology__order_by: str | None = Field(
        default='-creation_date', title='Morphology  Order By'
    )
    measurement_annotation__creation_date__lte: datetime | None = Field(
        default=None, title='Measurement Annotation  Creation Date  Lte'
    )
    measurement_annotation__creation_date__gte: datetime | None = Field(
        default=None, title='Measurement Annotation  Creation Date  Gte'
    )
    measurement_annotation__update_date__lte: datetime | None = Field(
        default=None, title='Measurement Annotation  Update Date  Lte'
    )
    measurement_annotation__update_date__gte: datetime | None = Field(
        default=None, title='Measurement Annotation  Update Date  Gte'
    )
    measurement_kind__pref_label: str | None = Field(
        default=None, title='Measurement Kind  Pref Label'
    )
    measurement_kind__definition: str | None = Field(
        default=None, title='Measurement Kind  Definition'
    )
    measurement_kind__structural_domain: StructuralDomain | None = Field(
        default=None, title='Measurement Kind  Structural Domain'
    )
    measurement_item__name: MeasurementStatistic | None = Field(
        default=None, title='Measurement Item  Name'
    )
    measurement_item__unit: MeasurementUnit | None = Field(
        default=None, title='Measurement Item  Unit'
    )
    measurement_item__value__gte: float | None = Field(
        default=None, title='Measurement Item  Value  Gte'
    )
    measurement_item__value__lte: float | None = Field(
        default=None, title='Measurement Item  Value  Lte'
    )
    emodel__name: str | None = Field(default=None, title='Emodel  Name')
    emodel__name__in: str | None = Field(default=None, title='Emodel  Name  In')
    emodel__name__ilike: str | None = Field(default=None, title='Emodel  Name  Ilike')
    emodel__species_id__in: str | None = Field(
        default=None, title='Emodel  Species Id  In'
    )
    emodel__creation_date__lte: datetime | None = Field(
        default=None, title='Emodel  Creation Date  Lte'
    )
    emodel__creation_date__gte: datetime | None = Field(
        default=None, title='Emodel  Creation Date  Gte'
    )
    emodel__update_date__lte: datetime | None = Field(
        default=None, title='Emodel  Update Date  Lte'
    )
    emodel__update_date__gte: datetime | None = Field(
        default=None, title='Emodel  Update Date  Gte'
    )
    emodel__id: UUID | None = Field(default=None, title='Emodel  Id')
    emodel__id__in: str | None = Field(default=None, title='Emodel  Id  In')
    emodel__score__lte: float | None = Field(default=None, title='Emodel  Score  Lte')
    emodel__score__gte: float | None = Field(default=None, title='Emodel  Score  Gte')
    emodel__order_by: str | None = Field(
        default='-creation_date', title='Emodel  Order By'
    )
    exemplar_morphology__name: str | None = Field(
        default=None, title='Exemplar Morphology  Name'
    )
    exemplar_morphology__name__in: str | None = Field(
        default=None, title='Exemplar Morphology  Name  In'
    )
    exemplar_morphology__name__ilike: str | None = Field(
        default=None, title='Exemplar Morphology  Name  Ilike'
    )
    exemplar_morphology__creation_date__lte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Creation Date  Lte'
    )
    exemplar_morphology__creation_date__gte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Creation Date  Gte'
    )
    exemplar_morphology__update_date__lte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Update Date  Lte'
    )
    exemplar_morphology__update_date__gte: datetime | None = Field(
        default=None, title='Exemplar Morphology  Update Date  Gte'
    )
    exemplar_morphology__id: UUID | None = Field(
        default=None, title='Exemplar Morphology  Id'
    )
    exemplar_morphology__id__in: str | None = Field(
        default=None, title='Exemplar Morphology  Id  In'
    )
    exemplar_morphology__species_id__in: str | None = Field(
        default=None, title='Exemplar Morphology  Species Id  In'
    )
    exemplar_morphology__order_by: str | None = Field(
        default='-creation_date', title='Exemplar Morphology  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )
    with_facets: bool | None = Field(default=False, title='With Facets')


class ReadManySpeciesGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    id: UUID | None = Field(default=None, title='Id')
    order_by: str | None = Field(default='name', title='Order By')
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )


ReadManyStrainGetParametersQuery = ReadManySpeciesGetParametersQuery


class ReadManySubjectGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    species_id__in: str | None = Field(default=None, title='Species Id  In')
    id: UUID | None = Field(default=None, title='Id')
    order_by: str | None = Field(default='-creation_date', title='Order By')
    species__name: str | None = Field(default=None, title='Species  Name')
    species__name__in: str | None = Field(default=None, title='Species  Name  In')
    species__name__ilike: str | None = Field(default=None, title='Species  Name  Ilike')
    species__id: UUID | None = Field(default=None, title='Species  Id')
    species__order_by: str | None = Field(default='name', title='Species  Order By')
    strain__name: str | None = Field(default=None, title='Strain  Name')
    strain__name__in: str | None = Field(default=None, title='Strain  Name  In')
    strain__name__ilike: str | None = Field(default=None, title='Strain  Name  Ilike')
    strain__id: UUID | None = Field(default=None, title='Strain  Id')
    strain__order_by: str | None = Field(default='name', title='Strain  Order By')
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')


class ReadManyValidationResultGetParametersQuery(BaseModel):
    page: int | None = Field(default=1, ge=1, title='Page')
    page_size: int | None = Field(default=100, ge=1, title='Page Size')
    name: str | None = Field(default=None, title='Name')
    name__in: str | None = Field(default=None, title='Name  In')
    name__ilike: str | None = Field(default=None, title='Name  Ilike')
    creation_date__lte: datetime | None = Field(
        default=None, title='Creation Date  Lte'
    )
    creation_date__gte: datetime | None = Field(
        default=None, title='Creation Date  Gte'
    )
    update_date__lte: datetime | None = Field(default=None, title='Update Date  Lte')
    update_date__gte: datetime | None = Field(default=None, title='Update Date  Gte')
    id: UUID | None = Field(default=None, title='Id')
    id__in: str | None = Field(default=None, title='Id  In')
    passed: bool | None = Field(default=None, title='Passed')
    validated_entity_id: UUID | None = Field(default=None, title='Validated Entity Id')
    order_by: str | None = Field(default='name', title='Order By')
    contribution__id: UUID | None = Field(default=None, title='Contribution  Id')
    contribution__pref_label: str | None = Field(
        default=None, title='Contribution  Pref Label'
    )
    contribution__pref_label__in: str | None = Field(
        default=None, title='Contribution  Pref Label  In'
    )
    contribution__order_by: str | None = Field(
        default='pref_label', title='Contribution  Order By'
    )
    created_by__id: UUID | None = Field(default=None, title='Created By  Id')
    created_by__pref_label: str | None = Field(
        default=None, title='Created By  Pref Label'
    )
    created_by__pref_label__in: str | None = Field(
        default=None, title='Created By  Pref Label  In'
    )
    created_by__order_by: str | None = Field(
        default='pref_label', title='Created By  Order By'
    )
    updated_by__id: UUID | None = Field(default=None, title='Updated By  Id')
    updated_by__pref_label: str | None = Field(
        default=None, title='Updated By  Pref Label'
    )
    updated_by__pref_label__in: str | None = Field(
        default=None, title='Updated By  Pref Label  In'
    )
    updated_by__order_by: str | None = Field(
        default='pref_label', title='Updated By  Order By'
    )
    search: str | None = Field(default=None, title='Search')
    with_facets: bool | None = Field(default=False, title='With Facets')
    within_brain_region_hierarchy_id: UUID | None = Field(
        default=None, title='Within Brain Region Hierarchy Id'
    )
    within_brain_region_brain_region_id: UUID | None = Field(
        default=None, title='Within Brain Region Brain Region Id'
    )
    within_brain_region_ascendants: bool | None = Field(
        default=False, title='Within Brain Region Ascendants'
    )


class AgentRead(RootModel[NestedPersonRead | NestedOrganizationRead]):
    root: NestedPersonRead | NestedOrganizationRead


class AssetRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    path: str = Field(..., title='Path')
    full_path: str = Field(..., title='Full Path')
    is_directory: bool = Field(..., title='Is Directory')
    content_type: ContentType
    size: int = Field(..., title='Size')
    sha256_digest: str | None = Field(..., title='Sha256 Digest')
    meta: dict[str, Any] = Field(..., title='Meta')
    label: AssetLabel
    id: UUID = Field(..., title='Id')
    status: AssetStatus


class BasicEntityRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: EntityType | None = None
    id: UUID = Field(..., title='Id')


class BrainAtlasRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    assets: list[AssetRead] = Field(..., title='Assets')
    id: UUID = Field(..., title='Id')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    hierarchy_id: UUID = Field(..., title='Hierarchy Id')
    species: NestedSpeciesRead


class BrainAtlasRegionRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    assets: list[AssetRead] = Field(..., title='Assets')
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    volume: float | None = Field(..., title='Volume')
    is_leaf_region: bool = Field(..., title='Is Leaf Region')
    brain_atlas_id: UUID = Field(..., title='Brain Atlas Id')
    brain_region_id: UUID = Field(..., title='Brain Region Id')


class BrainRegionHierarchyRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')


class CircuitCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    license_id: UUID | None = Field(default=None, title='License Id')
    brain_region_id: UUID = Field(..., title='Brain Region Id')
    subject_id: UUID = Field(..., title='Subject Id')
    experiment_date: datetime | None = Field(default=None, title='Experiment Date')
    contact_id: UUID | None = Field(default=None, title='Contact Id')
    atlas_id: UUID | None = Field(default=None, title='Atlas Id')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    has_morphologies: bool | None = Field(default=False, title='Has Morphologies')
    has_point_neurons: bool | None = Field(default=False, title='Has Point Neurons')
    has_electrical_cell_models: bool | None = Field(
        default=False, title='Has Electrical Cell Models'
    )
    has_spines: bool | None = Field(default=False, title='Has Spines')
    number_neurons: int = Field(..., title='Number Neurons')
    number_synapses: int = Field(..., title='Number Synapses')
    number_connections: int | None = Field(..., title='Number Connections')
    scale: CircuitScale
    build_category: CircuitBuildCategory
    root_circuit_id: UUID | None = Field(default=None, title='Root Circuit Id')


class ContributionRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    agent: AgentRead
    role: RoleRead
    entity: NestedEntityRead


class ETypeClassificationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    entity_id: UUID = Field(..., title='Entity Id')
    etype_class_id: UUID = Field(..., title='Etype Class Id')


class ElectricalCellRecordingCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    license_id: UUID | None = Field(default=None, title='License Id')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    ljp: float | None = Field(
        default=0.0,
        description='Correction applied to the voltage trace, in mV',
        title='Liquid Junction Potential',
    )
    recording_location: list[str] = Field(
        ...,
        description='Location on the cell where recording was performed, in hoc-compatible format.',
        title='Recording Location',
    )
    recording_type: ElectricalRecordingType = Field(
        ...,
        description="Recording type. One of: [<ElectricalRecordingStimulusType.conductance_clamp: 'conductance_clamp'>, <ElectricalRecordingStimulusType.current_clamp: 'current_clamp'>, <ElectricalRecordingStimulusType.extracellular: 'extracellular'>, <ElectricalRecordingStimulusType.other: 'other'>, <ElectricalRecordingStimulusType.unknown: 'unknown'>, <ElectricalRecordingStimulusType.voltage_clamp: 'voltage_clamp'>]",
        title='Recording Type',
    )
    recording_origin: ElectricalRecordingOrigin = Field(
        ...,
        description="Recording origin. One of: [<ElectricalRecordingOrigin.in_silico: 'in_silico'>, <ElectricalRecordingOrigin.in_vitro: 'in_vitro'>, <ElectricalRecordingOrigin.in_vivo: 'in_vivo'>, <ElectricalRecordingOrigin.unknown: 'unknown'>]",
        title='Recording Origin',
    )
    comment: str | None = Field(
        default=None, description='Comment with further details.', title='Comment'
    )
    legacy_id: list[str] | None = Field(default=None, title='Legacy Id')
    subject_id: UUID = Field(..., title='Subject Id')
    brain_region_id: UUID | None = Field(default=None, title='Brain Region Id')


class ElectricalRecordingStimulusRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: EntityType | None = None
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    dt: float | None = Field(default=None, title='Dt')
    injection_type: ElectricalRecordingStimulusType
    shape: ElectricalRecordingStimulusShape
    start_time: float | None = Field(default=None, title='Start Time')
    end_time: float | None = Field(default=None, title='End Time')


class ExemplarMorphology(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    location: PointLocationBase | None = None
    legacy_id: list[str] | None = Field(..., title='Legacy Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')


class ListResponseAnnotation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[Annotation] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseAssetRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[AssetRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseBasicEntityRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[BasicEntityRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseBrainAtlasRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[BrainAtlasRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseBrainAtlasRegionRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[BrainAtlasRegionRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseBrainRegionHierarchyRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[BrainRegionHierarchyRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseBrainRegionRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[BrainRegionRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseContributionRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[ContributionRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseLicenseRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[LicenseRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseOrganizationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[OrganizationRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponsePersonRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[PersonRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseRoleRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[RoleRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseSimulationGenerationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[SimulationGenerationRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseSpeciesRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[SpeciesRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseStrainRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[StrainRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseSubjectRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[SubjectRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseValidationResultRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[ValidationResultRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class MEModelCalibrationResultRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    holding_current: float = Field(..., title='Holding Current')
    threshold_current: float = Field(..., title='Threshold Current')
    rin: float | None = Field(default=None, title='Rin')
    calibrated_entity_id: UUID = Field(..., title='Calibrated Entity Id')


class MEModelCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    validation_status: ValidationStatus | None = Field(
        default_factory=lambda: ValidationStatus.model_validate('created')
    )
    brain_region_id: UUID = Field(..., title='Brain Region Id')
    morphology_id: UUID = Field(..., title='Morphology Id')
    emodel_id: UUID = Field(..., title='Emodel Id')
    species_id: UUID = Field(..., title='Species Id')
    strain_id: UUID | None = Field(default=None, title='Strain Id')


class MTypeClassificationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    entity_id: UUID = Field(..., title='Entity Id')
    mtype_class_id: UUID = Field(..., title='Mtype Class Id')


class MeasurementItem(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: MeasurementStatistic | None = None
    unit: MeasurementUnit | None = None
    value: float | None = Field(..., title='Value')


class MeasurementKindCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    structural_domain: StructuralDomain
    measurement_items: list[MeasurementItem] = Field(..., title='Measurement Items')
    pref_label: str = Field(..., title='Pref Label')


MeasurementKindRead = MeasurementKindCreate


class MeasurementRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: int = Field(..., title='Id')
    name: str = Field(..., title='Name')
    unit: MeasurementUnit
    value: float = Field(..., title='Value')


class NestedContributionRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    agent: AgentRead
    role: RoleRead


class NestedMEModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    validation_status: ValidationStatus | None = Field(
        default_factory=lambda: ValidationStatus.model_validate('created')
    )
    mtypes: list[Annotation] | None = Field(..., title='Mtypes')
    etypes: list[Annotation] | None = Field(..., title='Etypes')


class NestedSubjectRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    sex: Sex = Field(..., description='Sex of the subject')
    weight: Weight | None = Field(
        default=None, description='Weight in grams', title='Weight'
    )
    age_value: float | None = Field(
        default=None, description='Age value interval.', title='Age value'
    )
    age_min: float | None = Field(
        default=None, description='Minimum age range', title='Minimum age range'
    )
    age_max: float | None = Field(
        default=None, description='Maximum age range', title='Maximum age range'
    )
    age_period: AgePeriod | None = None
    species: NestedSpeciesRead


class NeuronBlock(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    global_: list[dict[str, str | None]] | None = Field(
        default=[], alias='global', title='Global'
    )
    range: list[dict[str, str | None]] | None = Field(default=[], title='Range')
    useion: list[UseIon] | None = Field(default=[], title='Useion')
    nonspecific: list[dict[str, str | None]] | None = Field(
        default=[], title='Nonspecific'
    )


class ReconstructionMorphologyRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    contributions: list[NestedContributionRead] | None = Field(
        ..., title='Contributions'
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    type: EntityType | None = None
    assets: list[AssetRead] = Field(..., title='Assets')
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    license: LicenseRead | None = None
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    location: PointLocationBase | None = None
    legacy_id: list[str] | None = Field(..., title='Legacy Id')
    species: NestedSpeciesRead
    strain: NestedStrainRead | None = None
    brain_region: BrainRegionRead
    mtypes: list[Annotation] | None = Field(..., title='Mtypes')


class SimulationCampaignRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    assets: list[AssetRead] = Field(..., title='Assets')
    id: UUID = Field(..., title='Id')
    type: EntityType | None = None
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    scan_parameters: dict[str, Any] = Field(..., title='Scan Parameters')
    entity_id: UUID = Field(..., title='Entity Id')
    simulations: list[NestedSimulationRead] = Field(..., title='Simulations')


class SimulationExecutionCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    start_time: datetime | None = Field(default=None, title='Start Time')
    end_time: datetime | None = Field(default=None, title='End Time')
    used_ids: list[UUID] | None = Field(default=[], title='Used Ids')
    generated_ids: list[UUID] | None = Field(default=[], title='Generated Ids')
    status: SimulationExecutionStatus


class SimulationExecutionRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    id: UUID = Field(..., title='Id')
    type: ActivityType | None = None
    start_time: datetime | None = Field(default=None, title='Start Time')
    end_time: datetime | None = Field(default=None, title='End Time')
    used: list[NestedEntityRead] = Field(..., title='Used')
    generated: list[NestedEntityRead] = Field(..., title='Generated')
    status: SimulationExecutionStatus


class SimulationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    assets: list[AssetRead] = Field(..., title='Assets')
    id: UUID = Field(..., title='Id')
    type: EntityType | None = None
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    simulation_campaign_id: UUID = Field(..., title='Simulation Campaign Id')
    entity_id: UUID = Field(..., title='Entity Id')
    scan_parameters: dict[str, Any] = Field(..., title='Scan Parameters')


class SimulationResultRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    assets: list[AssetRead] = Field(..., title='Assets')
    id: UUID = Field(..., title='Id')
    type: EntityType | None = None
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    simulation_id: UUID = Field(..., title='Simulation Id')


class SingleNeuronSimulationCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    brain_region_id: UUID = Field(..., title='Brain Region Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    seed: int = Field(..., title='Seed')
    status: SingleNeuronSimulationStatus
    injection_location: list[str] = Field(..., title='Injection Location')
    recording_location: list[str] = Field(..., title='Recording Location')
    me_model_id: UUID = Field(..., title='Me Model Id')


class SingleNeuronSimulationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    assets: list[AssetRead] = Field(..., title='Assets')
    type: EntityType | None = None
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    id: UUID = Field(..., title='Id')
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    brain_region: BrainRegionRead
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    seed: int = Field(..., title='Seed')
    status: SingleNeuronSimulationStatus
    injection_location: list[str] = Field(..., title='Injection Location')
    recording_location: list[str] = Field(..., title='Recording Location')
    me_model: NestedMEModel


class SingleNeuronSynaptomeRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    assets: list[AssetRead] = Field(..., title='Assets')
    type: EntityType | None = None
    contributions: list[NestedContributionRead] | None = Field(
        ..., title='Contributions'
    )
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    id: UUID = Field(..., title='Id')
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    seed: int = Field(..., title='Seed')
    me_model: NestedMEModel
    brain_region: BrainRegionRead


class SingleNeuronSynaptomeSimulationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    assets: list[AssetRead] = Field(..., title='Assets')
    type: EntityType | None = None
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    id: UUID = Field(..., title='Id')
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    brain_region: BrainRegionRead
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    seed: int = Field(..., title='Seed')
    status: SingleNeuronSimulationStatus
    injection_location: list[str] = Field(..., title='Injection Location')
    recording_location: list[str] = Field(..., title='Recording Location')
    synaptome: NestedSynaptome


class AssetAndPresignedURLS(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    asset: AssetRead
    files: dict[str, AnyUrl] = Field(..., title='Files')


class CellCompositionRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    assets: list[AssetRead] = Field(..., title='Assets')
    contributions: list[NestedContributionRead] | None = Field(
        ..., title='Contributions'
    )
    type: EntityType | None = None
    id: UUID = Field(..., title='Id')
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')


class CircuitRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    assets: list[AssetRead] = Field(..., title='Assets')
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    id: UUID = Field(..., title='Id')
    type: EntityType | None = None
    license: LicenseRead | None = None
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    brain_region: BrainRegionRead
    subject: NestedSubjectRead
    experiment_date: datetime | None = Field(default=None, title='Experiment Date')
    contact_id: UUID | None = Field(default=None, title='Contact Id')
    atlas_id: UUID | None = Field(default=None, title='Atlas Id')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    has_morphologies: bool | None = Field(default=False, title='Has Morphologies')
    has_point_neurons: bool | None = Field(default=False, title='Has Point Neurons')
    has_electrical_cell_models: bool | None = Field(
        default=False, title='Has Electrical Cell Models'
    )
    has_spines: bool | None = Field(default=False, title='Has Spines')
    number_neurons: int = Field(..., title='Number Neurons')
    number_synapses: int = Field(..., title='Number Synapses')
    number_connections: int | None = Field(..., title='Number Connections')
    scale: CircuitScale
    build_category: CircuitBuildCategory
    root_circuit_id: UUID | None = Field(default=None, title='Root Circuit Id')


class EModelRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    contributions: list[NestedContributionRead] | None = Field(
        ..., title='Contributions'
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    assets: list[AssetRead] = Field(..., title='Assets')
    type: EntityType | None = None
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    description: str = Field(..., title='Description')
    name: str = Field(..., title='Name')
    iteration: str = Field(..., title='Iteration')
    score: float = Field(..., title='Score')
    seed: int = Field(..., title='Seed')
    id: UUID = Field(..., title='Id')
    species: NestedSpeciesRead
    strain: NestedStrainRead | None = None
    brain_region: BrainRegionRead
    mtypes: list[Annotation] | None = Field(..., title='Mtypes')
    etypes: list[Annotation] | None = Field(..., title='Etypes')
    exemplar_morphology: ExemplarMorphology


class ElectricalCellRecordingRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    contributions: list[NestedContributionRead] | None = Field(
        ..., title='Contributions'
    )
    subject: NestedSubjectRead
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    type: EntityType | None = None
    id: UUID = Field(..., title='Id')
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    license: LicenseRead | None = None
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    ljp: float | None = Field(
        default=0.0,
        description='Correction applied to the voltage trace, in mV',
        title='Liquid Junction Potential',
    )
    recording_location: list[str] = Field(
        ...,
        description='Location on the cell where recording was performed, in hoc-compatible format.',
        title='Recording Location',
    )
    recording_type: ElectricalRecordingType = Field(
        ...,
        description="Recording type. One of: [<ElectricalRecordingStimulusType.conductance_clamp: 'conductance_clamp'>, <ElectricalRecordingStimulusType.current_clamp: 'current_clamp'>, <ElectricalRecordingStimulusType.extracellular: 'extracellular'>, <ElectricalRecordingStimulusType.other: 'other'>, <ElectricalRecordingStimulusType.unknown: 'unknown'>, <ElectricalRecordingStimulusType.voltage_clamp: 'voltage_clamp'>]",
        title='Recording Type',
    )
    recording_origin: ElectricalRecordingOrigin = Field(
        ...,
        description="Recording origin. One of: [<ElectricalRecordingOrigin.in_silico: 'in_silico'>, <ElectricalRecordingOrigin.in_vitro: 'in_vitro'>, <ElectricalRecordingOrigin.in_vivo: 'in_vivo'>, <ElectricalRecordingOrigin.unknown: 'unknown'>]",
        title='Recording Origin',
    )
    comment: str | None = Field(
        default=None, description='Comment with further details.', title='Comment'
    )
    legacy_id: list[str] | None = Field(default=None, title='Legacy Id')
    brain_region: BrainRegionRead
    assets: list[AssetRead] | None = Field(..., title='Assets')
    stimuli: list[ElectricalRecordingStimulusRead] | None = Field(
        default=None,
        description='List of stimuli applied to the cell with their respective time steps',
        title='Electrical Recording Stimuli',
    )
    etypes: list[Annotation] | None = Field(..., title='Etypes')


class ExperimentalBoutonDensityRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    subject: NestedSubjectRead
    contributions: list[NestedContributionRead] | None = Field(
        ..., title='Contributions'
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    type: EntityType | None = None
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    license: LicenseRead | None = None
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    measurements: list[MeasurementRead] | None = Field(..., title='Measurements')
    assets: list[AssetRead] | None = Field(..., title='Assets')
    brain_region: BrainRegionRead
    mtypes: list[Annotation] | None = Field(..., title='Mtypes')


class ExperimentalNeuronDensityRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    subject: NestedSubjectRead
    contributions: list[NestedContributionRead] | None = Field(
        ..., title='Contributions'
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    type: EntityType | None = None
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    license: LicenseRead | None = None
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    measurements: list[MeasurementRead] | None = Field(..., title='Measurements')
    assets: list[AssetRead] | None = Field(..., title='Assets')
    brain_region: BrainRegionRead
    mtypes: list[Annotation] | None = Field(..., title='Mtypes')
    etypes: list[Annotation] | None = Field(..., title='Etypes')


class ExperimentalSynapsesPerConnectionRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    subject: NestedSubjectRead
    contributions: list[NestedContributionRead] | None = Field(
        ..., title='Contributions'
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    type: EntityType | None = None
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    license: LicenseRead | None = None
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    measurements: list[MeasurementRead] | None = Field(..., title='Measurements')
    assets: list[AssetRead] | None = Field(..., title='Assets')
    brain_region: BrainRegionRead
    pre_mtype: Annotation
    post_mtype: Annotation
    pre_region: BrainRegionRead
    post_region: BrainRegionRead


class IonChannelModelCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    description: str = Field(..., title='Description')
    name: str = Field(..., title='Name')
    nmodl_suffix: str = Field(..., title='Nmodl Suffix')
    is_ljp_corrected: bool | None = Field(default=False, title='Is Ljp Corrected')
    is_temperature_dependent: bool | None = Field(
        default=False, title='Is Temperature Dependent'
    )
    temperature_celsius: int = Field(..., title='Temperature Celsius')
    is_stochastic: bool | None = Field(default=False, title='Is Stochastic')
    neuron_block: NeuronBlock
    species_id: UUID = Field(..., title='Species Id')
    strain_id: UUID | None = Field(default=None, title='Strain Id')
    brain_region_id: UUID = Field(..., title='Brain Region Id')


class IonChannelModelExpanded(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    contributions: list[NestedContributionRead] | None = Field(
        ..., title='Contributions'
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    assets: list[AssetRead] = Field(..., title='Assets')
    type: EntityType | None = None
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    description: str = Field(..., title='Description')
    name: str = Field(..., title='Name')
    nmodl_suffix: str = Field(..., title='Nmodl Suffix')
    is_ljp_corrected: bool | None = Field(default=False, title='Is Ljp Corrected')
    is_temperature_dependent: bool | None = Field(
        default=False, title='Is Temperature Dependent'
    )
    temperature_celsius: int = Field(..., title='Temperature Celsius')
    is_stochastic: bool | None = Field(default=False, title='Is Stochastic')
    neuron_block: NeuronBlock
    species: NestedSpeciesRead
    strain: NestedStrainRead | None = None
    brain_region: BrainRegionRead


class IonChannelModelRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: EntityType | None = None
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    description: str = Field(..., title='Description')
    name: str = Field(..., title='Name')
    nmodl_suffix: str = Field(..., title='Nmodl Suffix')
    is_ljp_corrected: bool | None = Field(default=False, title='Is Ljp Corrected')
    is_temperature_dependent: bool | None = Field(
        default=False, title='Is Temperature Dependent'
    )
    temperature_celsius: int = Field(..., title='Temperature Celsius')
    is_stochastic: bool | None = Field(default=False, title='Is Stochastic')
    neuron_block: NeuronBlock
    species: NestedSpeciesRead
    strain: NestedStrainRead | None = None
    brain_region: BrainRegionRead


class IonChannelModelWAssets(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    assets: list[AssetRead] = Field(..., title='Assets')
    type: EntityType | None = None
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    description: str = Field(..., title='Description')
    name: str = Field(..., title='Name')
    nmodl_suffix: str = Field(..., title='Nmodl Suffix')
    is_ljp_corrected: bool | None = Field(default=False, title='Is Ljp Corrected')
    is_temperature_dependent: bool | None = Field(
        default=False, title='Is Temperature Dependent'
    )
    temperature_celsius: int = Field(..., title='Temperature Celsius')
    is_stochastic: bool | None = Field(default=False, title='Is Stochastic')
    neuron_block: NeuronBlock
    species: NestedSpeciesRead
    strain: NestedStrainRead | None = None
    brain_region: BrainRegionRead


class ListResponseCellCompositionRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[CellCompositionRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseCircuitRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[CircuitRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseElectricalCellRecordingRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[ElectricalCellRecordingRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseExperimentalBoutonDensityRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[ExperimentalBoutonDensityRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseExperimentalNeuronDensityRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[ExperimentalNeuronDensityRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseExperimentalSynapsesPerConnectionRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[ExperimentalSynapsesPerConnectionRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseIonChannelModelRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[IonChannelModelRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseMEModelCalibrationResultRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[MEModelCalibrationResultRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseReconstructionMorphologyRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[ReconstructionMorphologyRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseSimulationCampaignRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[SimulationCampaignRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseSimulationExecutionRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[SimulationExecutionRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseSimulationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[SimulationRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseSimulationResultRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[SimulationResultRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseSingleNeuronSimulationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[SingleNeuronSimulationRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseSingleNeuronSynaptomeRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[SingleNeuronSynaptomeRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseSingleNeuronSynaptomeSimulationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[SingleNeuronSynaptomeSimulationRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class MEModelRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    contributions: list[NestedContributionRead] | None = Field(
        ..., title='Contributions'
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    type: EntityType | None = None
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    validation_status: ValidationStatus | None = Field(
        default_factory=lambda: ValidationStatus.model_validate('created')
    )
    id: UUID = Field(..., title='Id')
    species: NestedSpeciesRead
    strain: NestedStrainRead | None = None
    brain_region: BrainRegionRead
    mtypes: list[Annotation] | None = Field(..., title='Mtypes')
    etypes: list[Annotation] | None = Field(..., title='Etypes')
    morphology: ReconstructionMorphologyRead
    emodel: EModelRead
    calibration_result: MEModelCalibrationResultRead | None = None


class MeasurementAnnotationCreate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    entity_id: UUID = Field(..., title='Entity Id')
    entity_type: MeasurableEntity
    measurement_kinds: list[MeasurementKindCreate] = Field(
        ..., title='Measurement Kinds'
    )


class MeasurementAnnotationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    entity_id: UUID = Field(..., title='Entity Id')
    entity_type: MeasurableEntity
    measurement_kinds: list[MeasurementKindRead] = Field(..., title='Measurement Kinds')


class ReconstructionMorphologyAnnotationExpandedRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    contributions: list[NestedContributionRead] | None = Field(
        ..., title='Contributions'
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    type: EntityType | None = None
    assets: list[AssetRead] = Field(..., title='Assets')
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    license: LicenseRead | None = None
    id: UUID = Field(..., title='Id')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    name: str = Field(..., title='Name')
    description: str = Field(..., title='Description')
    location: PointLocationBase | None = None
    legacy_id: list[str] | None = Field(..., title='Legacy Id')
    species: NestedSpeciesRead
    strain: NestedStrainRead | None = None
    brain_region: BrainRegionRead
    mtypes: list[Annotation] | None = Field(..., title='Mtypes')
    measurement_annotation: MeasurementAnnotationRead | None = None


class ReadOneReconstructionMorphologyIdGetResponse(
    RootModel[
        ReconstructionMorphologyRead | ReconstructionMorphologyAnnotationExpandedRead
    ]
):
    root: (
        ReconstructionMorphologyRead | ReconstructionMorphologyAnnotationExpandedRead
    ) = Field(..., title='Response Read One Reconstruction Morphology  Id   Get')


class EModelReadExpanded(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    contributions: list[NestedContributionRead] | None = Field(
        ..., title='Contributions'
    )
    created_by: NestedPersonRead
    updated_by: NestedPersonRead
    assets: list[AssetRead] = Field(..., title='Assets')
    type: EntityType | None = None
    authorized_project_id: UUID4 = Field(..., title='Authorized Project Id')
    authorized_public: bool | None = Field(default=False, title='Authorized Public')
    creation_date: datetime = Field(..., title='Creation Date')
    update_date: datetime = Field(..., title='Update Date')
    description: str = Field(..., title='Description')
    name: str = Field(..., title='Name')
    iteration: str = Field(..., title='Iteration')
    score: float = Field(..., title='Score')
    seed: int = Field(..., title='Seed')
    id: UUID = Field(..., title='Id')
    species: NestedSpeciesRead
    strain: NestedStrainRead | None = None
    brain_region: BrainRegionRead
    mtypes: list[Annotation] | None = Field(..., title='Mtypes')
    etypes: list[Annotation] | None = Field(..., title='Etypes')
    exemplar_morphology: ExemplarMorphology
    ion_channel_models: list[IonChannelModelWAssets] = Field(
        ..., title='Ion Channel Models'
    )


class ListResponseEModelReadExpanded(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[EModelReadExpanded] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseMEModelRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[MEModelRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None


class ListResponseMeasurementAnnotationRead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: list[MeasurementAnnotationRead] = Field(..., title='Data')
    pagination: PaginationResponse
    facets: Facets | None = None
