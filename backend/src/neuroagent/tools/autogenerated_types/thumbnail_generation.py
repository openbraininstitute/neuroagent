# generated by datamodel-codegen:
#   filename:  https://staging.openbraininstitute.org/api/thumbnail-generation/openapi.json
#   timestamp: 2025-06-10T08:38:22+00:00

from __future__ import annotations

from typing import Literal
from uuid import UUID

from pydantic import BaseModel, Field, RootModel


class ErrorMessage(BaseModel):
    detail: str = Field(..., title='Detail')


class ValidationError(BaseModel):
    loc: list[str | int] = Field(..., title='Location')
    msg: str = Field(..., title='Message')
    type: str = Field(..., title='Error Type')


class Dpi(RootModel[int]):
    root: int = Field(..., ge=10, le=600, title='Dpi')


class GetMorphologyPreviewApiThumbnailGenerationCoreReconstructionMorphologyPreviewGetParametersQuery(
    BaseModel
):
    entity_id: UUID = Field(..., title='Entity Id')
    asset_id: UUID = Field(..., title='Asset Id')
    dpi: Dpi | None = Field(default=None, title='Dpi')


GetEphysPreviewApiThumbnailGenerationCoreElectricalCellRecordingPreviewGetParametersQuery = GetMorphologyPreviewApiThumbnailGenerationCoreReconstructionMorphologyPreviewGetParametersQuery


class GetSimulationPlotApiThumbnailGenerationCoreSimulationTypePreviewGetParametersQuery(
    BaseModel
):
    entity_id: UUID = Field(..., title='Entity Id')
    asset_id: UUID = Field(..., title='Asset Id')
    target: Literal['stimulus', 'simulation'] = Field(..., title='Target')
    w: int | None = Field(default=None, title='W')
    h: int | None = Field(default=None, title='H')


class GetMorphologyImageApiThumbnailGenerationGenerateMorphologyImageGetParametersQuery(
    BaseModel
):
    content_url: str = Field(..., title='Content Url')
    dpi: Dpi | None = Field(default=None, title='Dpi')


GetTraceImageApiThumbnailGenerationGenerateTraceImageGetParametersQuery = (
    GetMorphologyImageApiThumbnailGenerationGenerateMorphologyImageGetParametersQuery
)


class GetSimulationPlotApiThumbnailGenerationGenerateSimulationPlotGetParametersQuery(
    BaseModel
):
    content_url: str = Field(..., title='Content Url')
    target: Literal['stimulus', 'simulation'] = Field(..., title='Target')
    w: int | None = Field(default=None, title='W')
    h: int | None = Field(default=None, title='H')


class ProcessSomaApiThumbnailGenerationSomaProcessNexusSwcGetParametersQuery(BaseModel):
    content_url: str = Field(
        ..., description='URL of the SWC file to process', title='Content Url'
    )


class HTTPValidationError(BaseModel):
    detail: list[ValidationError] | None = Field(default=None, title='Detail')
