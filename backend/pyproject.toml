[build-system]
requires = ["setuptools"]

[project]
name = "neuroagent"
authors = [
    {name = "Blue Brain Project, EPFL"},
]
description = "Search agent for neuroscience."
readme = "README.md"
requires-python = ">=3.11"
dynamic = ["version"]
dependencies = [
    "aiohttp",
    "aiosqlite",
    "alembic",
    "asgi-correlation-id",
    "asyncpg",
    "boto3",
    "bluepyefe",
    "efel",
    "fastapi",
    "matplotlib",
    "neurom",
    "numpy<2",
    "obp-accounting-sdk",
    "openai",
    "psycopg2",
    "pydantic-settings",
    "python-dotenv",
    "python-keycloak",
    "redis",
    "scikit-learn",
    "sqlalchemy[asyncio]",
    "tavily-python",
    "uvicorn",
    ]

[project.optional-dependencies]
dev = [
    "bandit[toml]",
    "mypy",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-httpx",
    "responses",
    "ruff",
    "types-requests",
    ]

[project.scripts]
neuroagent-api = "neuroagent.scripts.neuroagent_api:main"

[tool.setuptools.dynamic]
version = {attr = "neuroagent.__version__"}

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.bandit]
exclude_dirs = ["tests"]

[tool.black]
line-length = 88
preview = true

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I", "D"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]
"alembic/*" = ["D", "E"]

[tool.mypy]
mypy_path = "src"
python_version = "3.11"
ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
plugins = [
  "pydantic.mypy", "sqlalchemy.ext.mypy.plugin"
]

[[tool.mypy.overrides]]
module = "neuroagent.tools.*"
disable_error_code = ["override"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
    "ignore:Use get_feature_values:DeprecationWarning",
    "ignore:Mean of empty slice:RuntimeWarning",
    "ignore:Degrees of freedom:RuntimeWarning",
    "ignore:Exception ignored in:pytest.PytestUnraisableExceptionWarning",
    "ignore:The configuration option 'asyncio_default_fixture_loop_scope' is unset.",
    "ignore:datetime.*is deprecated and scheduled for removal in a future version.:DeprecationWarning",
]

addopts = "--cov=src/ -v --cov-report=term-missing --durations=20 --no-cov-on-fail"
