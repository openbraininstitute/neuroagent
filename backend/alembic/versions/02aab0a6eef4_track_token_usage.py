"""track token usage

Revision ID: 02aab0a6eef4
Revises: dde4f8453a14
Create Date: 2025-07-14 11:22:33.884953

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "02aab0a6eef4"
down_revision: Union[str, None] = "dde4f8453a14"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "token_consumption",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("message_id", sa.UUID(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("INPUT", "INPUT_CACHED", "COMPLETION", name="tokentype"),
            nullable=False,
        ),
        sa.Column(
            "task",
            sa.Enum("CHAT_COMPLETION", "TOOL_SELECTION", name="task"),
            nullable=False,
        ),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.Column("model", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["message_id"],
            ["messages.message_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_column("messages", "model")

    # Data migration for tool_selection column rename
    op.add_column("tool_selection", sa.Column("tool_name", sa.String(), nullable=True))

    # Copy data from selected_tools to tool_name
    connection = op.get_bind()
    connection.execute(sa.text("UPDATE tool_selection SET tool_name = selected_tools"))

    # Make tool_name non-nullable after data migration
    op.alter_column("tool_selection", "tool_name", nullable=False)

    op.drop_column("tool_selection", "selected_tools")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Data migration for tool_selection column rename (reverse)
    op.add_column(
        "tool_selection",
        sa.Column("selected_tools", sa.VARCHAR(), autoincrement=False, nullable=True),
    )

    # Copy data from tool_name back to selected_tools
    connection = op.get_bind()
    connection.execute(sa.text("UPDATE tool_selection SET selected_tools = tool_name"))

    # Make selected_tools non-nullable after data migration
    op.alter_column("tool_selection", "selected_tools", nullable=False)

    op.drop_column("tool_selection", "tool_name")
    op.add_column(
        "messages", sa.Column("model", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_table("token_consumption")

    type_enum = sa.Enum(name="tokentype")
    task_enum = sa.Enum(name="task")
    type_enum.drop(op.get_bind())
    task_enum.drop(op.get_bind())
    # ### end Alembic commands ###
