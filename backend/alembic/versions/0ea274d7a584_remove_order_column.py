"""remove order column

Revision ID: 0ea274d7a584
Revises: 08a638866869
Create Date: 2025-04-14 15:10:13.695396

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0ea274d7a584"
down_revision: Union[str, None] = "08a638866869"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("messages", "order")
    # ### end Alembic commands ###


def downgrade() -> None:
    # Step 1: Add the column "order" as nullable
    op.add_column("messages", sa.Column("order", sa.Integer(), nullable=True))

    # Step 2: Populate the "order" column using a window function.
    # We partition the rows by thread_id and order them by creation_date.
    # We subtract one so that the order numbering starts at 0.
    conn = op.get_bind()
    conn.execute(
        sa.text("""
            WITH ordered_messages AS (
                SELECT message_id,
                       ROW_NUMBER() OVER (PARTITION BY thread_id ORDER BY creation_date) - 1 AS rn
                FROM messages
            )
            UPDATE messages
            SET "order" = ordered_messages.rn
            FROM ordered_messages
            WHERE messages.message_id = ordered_messages.message_id
        """)
    )

    # Step 3: Alter the column to be non-nullable now that it has been populated.
    op.alter_column("messages", "order", nullable=False)
    # ### end Alembic commands ###
