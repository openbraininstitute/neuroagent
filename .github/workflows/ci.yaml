name: CI

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Run the build with tmate debugging enabled"
        required: false

jobs:
  linting:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Cancel previous workflows that are still running
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout latest commit
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all history with version tags
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "backend/uv.lock"
      - name: Set up environment
        run: uv pip bandit[toml] ruff
      - name: Linting check
        run: |
          uv run --no-sync bandit -qr -c pyproject.toml src/
          uv run --no-sync ruff check src/ tests/
          uv run --no-sync ruff format --check src/ tests/

  mypy:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: backend
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]
    steps:
      - name: Cancel previous workflows that are still running
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout latest commit
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "backend/uv.lock"
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      - name: Run mypy
        run: |
          export PYTHONPATH=$(pwd)/src:$PYTHONPATH
          uv run mypy src/

  unit-tests:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: backend
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd "pg_isready -d postgres://test:password@localhost:5432"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 5432:5432
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]
    steps:
      - name: Cancel previous workflows that are still running
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout latest commit
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "backend/uv.lock"
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      - name: Run alembic
        run: |
          export PYTHONPATH=$(pwd)/src:$PYTHONPATH
          uv run alembic -x url=postgresql://test:password@localhost:5432 upgrade head
      - name: Run tests
        run: |
          export PYTHONPATH=$(pwd)/src:$PYTHONPATH
          uv run pytest --color=yes tests/
