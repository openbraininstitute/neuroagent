name: Autogen

on:
  pull_request:
  push:
    branches: [main]

jobs:
  autogen-checks:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5  # Updated to v5
        with:
          python-version: "3.11"

      - name: Install datamodel-code-generator
        run: |
          pip install datamodel-code-generator[http]

      - name: Run autogen commands
        run: |
          # Array of services and their corresponding output files
          declare -A SERVICES=(
            ["entitycore"]="entitycore.py"
            ["obi-one"]="obione.py"
            ["bluenaas"]="bluenaas.py"
            ["thumbnail-generation"]="thumbnail_generation.py"
          )

          for service in "${!SERVICES[@]}"; do
              # Set extra-fields parameter based on service
              if [[ "$service" == "obi-one" ]]; then
                  extra_fields="ignore"
              else
                  extra_fields="allow"
              fi

              datamodel-codegen \
                --enum-field-as-literal=all \
                --target-python-version=3.11 \
                --reuse-model \
                --field-constraints \
                --input-file-type=openapi \
                --output-model-type=pydantic_v2.BaseModel \
                --openapi-scopes {schemas,paths,parameters} \
                --use-standard-collections \
                --use-union-operator \
                --use-default-kwarg \
                --use-operation-id-as-name \
                --extra-fields=$extra_fields \
                --disable-timestamp \
                --url="https://staging.openbraininstitute.org/api/${service}/openapi.json" \
                --output="src/neuroagent/tools/autogenerated_types/${SERVICES[$service]}"
          done

      - name: Check for meaningful changes
        run: |
          # Check if there are any changes at all
          if ! git diff --quiet HEAD -- src/neuroagent/tools/autogenerated_types/; then
            echo "Autogenerated files are outdated."
            echo ""
            echo "Changed files:"

            # Get all changed files
            git diff --name-only --relative HEAD -- src/neuroagent/tools/autogenerated_types/ | while read file; do
              echo "  - $file"
            done

            echo ""
            echo "Please run the autogen commands locally and commit the changes."
            exit 1
          else
            echo "No changes detected in autogenerated files."
          fi
