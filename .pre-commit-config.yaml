repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-added-large-files
      - id: check-json
      - id: check-toml
      - id: check-yaml
      - id: requirements-txt-fixer
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: no-commit-to-branch
        args: [--branch, master, --branch, main]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.7
    hooks:
      - id: ruff
        args: [--fix]
      - id: ruff-format

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.4
    hooks:
      - id: bandit
        args: [-c, backend/pyproject.toml, -qr]
        files: ^backend/src/
        additional_dependencies: ["bandit[toml]"]

  - repo: local
    hooks:
      - id: mypy
        name: mypy
        files: ^backend/src/
        language: system
        entry: bash -c 'cd backend && mypy src/'

  - repo: local
    hooks:
      - id: prettier
        name: prettier
        files: \.[jt]sx?$
        language: system
        entry: bash -c 'cd frontend && exec npx prettier --write "**/*.{js,jsx,ts,tsx,json,md}"'

  - repo: local
    hooks:
      - id: eslint
        files: \.[jt]sx?$
        name: eslint
        language: system
        entry: bash -c 'cd frontend && exec npm run lint'

  - repo: local
    hooks:
      - id: type-check
        name: type-check
        files: \.[jt]sx?$
        language: system
        entry: bash -c 'cd frontend && exec npm run type-check'

  # - repo: local
  #   hooks:
  #     - id: build
  #       name: build
  #       files: \.[jt]sx?$
  #       language: system
  #       entry: bash -c 'cd frontend && exec npm run build'
